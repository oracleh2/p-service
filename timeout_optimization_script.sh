#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö —Ç–∞–π–º–∞—É—Ç–æ–≤ —Ä–æ—Ç–∞—Ü–∏–∏
# –ü—Ä–æ–≤–æ–¥–∏—Ç —Å–µ—Ä–∏—é —Ç–µ—Å—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏ –∏ –Ω–∞—Ö–æ–¥–∏—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

ROTATION_SCRIPT="./improved_storage_mode_rotation.sh"
RESULTS_FILE="timeout_optimization_results.txt"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
if [ ! -f "$ROTATION_SCRIPT" ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Å–∫—Ä–∏–ø—Ç —Ä–æ—Ç–∞—Ü–∏–∏: $ROTATION_SCRIPT"
    echo "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–∫—Ä–∏–ø—Ç –∫–∞–∫ improved_storage_mode_rotation.sh"
    exit 1
fi

chmod +x "$ROTATION_SCRIPT"

echo "üß™ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç–∞–π–º–∞—É—Ç–æ–≤ —Ä–æ—Ç–∞—Ü–∏–∏"
echo "=============================================="
echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $RESULTS_FILE"
echo ""

# –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
cat > "$RESULTS_FILE" << EOF
# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç–∞–π–º–∞—É—Ç–æ–≤ —Ä–æ—Ç–∞—Ü–∏–∏
# –î–∞—Ç–∞: $(date)
# –§–æ—Ä–º–∞—Ç: storage_timeout,restore_timeout,interface_timeout,dhcp_timeout,success,initial_ip,new_ip,total_time

EOF

# –ù–∞–±–æ—Ä—ã —Ç–∞–π–º–∞—É—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
declare -a TEST_CONFIGS=(
    # –ë—ã—Å—Ç—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    "5,10,30,15"
    "5,15,30,15"
    "10,15,30,15"
    "10,20,30,15"

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    "15,20,60,20"
    "15,25,60,20"
    "20,25,60,20"
    "20,30,60,20"

    # –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –Ω–æ –Ω–∞–¥–µ–∂–Ω—ã–µ
    "25,35,90,25"
    "30,40,90,25"
    "30,45,120,30"
    "35,50,120,30"
)

TOTAL_TESTS=${#TEST_CONFIGS[@]}
CURRENT_TEST=0
SUCCESSFUL_TESTS=0

echo "üìä –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo "‚è±Ô∏è  –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è: $((TOTAL_TESTS * 3)) –º–∏–Ω—É—Ç"
echo ""

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
run_test() {
    local config="$1"
    local test_num="$2"

    IFS=',' read -r storage_timeout restore_timeout interface_timeout dhcp_timeout <<< "$config"

    echo "üî¨ –¢–µ—Å—Ç $test_num/$TOTAL_TESTS"
    echo "üìã –¢–∞–π–º–∞—É—Ç—ã: Storage=${storage_timeout}s, Restore=${restore_timeout}s, Interface=${interface_timeout}s, DHCP=${dhcp_timeout}s"

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞
    echo "# –¢–µ—Å—Ç $test_num: $config" >> "$RESULTS_FILE"

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    local start_time=$(date +%s)

    # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞
    local test_output
    test_output=$($ROTATION_SCRIPT -s "$storage_timeout" -r "$restore_timeout" -i "$interface_timeout" -d "$dhcp_timeout" 2>&1)
    local exit_code=$?

    local end_time=$(date +%s)
    local total_time=$((end_time - start_time))

    # –ò–∑–≤–ª–µ–∫–∞–µ–º IP –∞–¥—Ä–µ—Å–∞ –∏–∑ –≤—ã–≤–æ–¥–∞
    local initial_ip=$(echo "$test_output" | grep "–ù–∞—á–∞–ª—å–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π IP:" | grep -o '[0-9.]*' | tail -1)
    local new_ip=$(echo "$test_output" | grep "–ù–æ–≤—ã–π IP:" | grep -o '[0-9.]*' | tail -1)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    local success="false"
    if [ $exit_code -eq 0 ]; then
        success="true"
        SUCCESSFUL_TESTS=$((SUCCESSFUL_TESTS + 1))
        echo "  ‚úÖ –£—Å–ø–µ—à–Ω–æ! IP: $initial_ip ‚Üí $new_ip (${total_time}s)"
    else
        echo "  ‚ùå –ù–µ—É–¥–∞—á–Ω–æ (${total_time}s)"
    fi

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo "$storage_timeout,$restore_timeout,$interface_timeout,$dhcp_timeout,$success,$initial_ip,$new_ip,$total_time" >> "$RESULTS_FILE"

    # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    echo "‚è≥ –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ (30s)..."
    sleep 30

    echo ""
}

# –ü—Ä–æ–≤–æ–¥–∏–º –≤—Å–µ —Ç–µ—Å—Ç—ã
echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..."
echo ""

for config in "${TEST_CONFIGS[@]}"; do
    CURRENT_TEST=$((CURRENT_TEST + 1))
    run_test "$config" "$CURRENT_TEST"
done

echo ""
echo "üìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
echo "==================="

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo "üìã –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo "  –£—Å–ø–µ—à–Ω—ã—Ö: $SUCCESSFUL_TESTS"
echo "  –ù–µ—É–¥–∞—á–Ω—ã—Ö: $((TOTAL_TESTS - SUCCESSFUL_TESTS))"
echo "  –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: $(( (SUCCESSFUL_TESTS * 100) / TOTAL_TESTS ))%"
echo ""

if [ $SUCCESSFUL_TESTS -gt 0 ]; then
    echo "‚úÖ –£—Å–ø–µ—à–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    echo "========================="

    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–µ —Ç–µ—Å—Ç—ã
    while IFS=',' read -r storage restore interface dhcp success initial_ip new_ip total_time; do
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        if [[ "$storage" == \#* ]]; then
            continue
        fi

        if [ "$success" = "true" ]; then
            echo "  üìã $storage/$restore/$interface/${dhcp}s ‚Üí IP: $initial_ip ‚Üí $new_ip (${total_time}s)"
        fi
    done < "$RESULTS_FILE"

    echo ""
    echo "üèÜ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "==============="

    # –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—É—é –±—ã—Å—Ç—Ä—É—é —É—Å–ø–µ—à–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    fastest_config=$(grep ",true," "$RESULTS_FILE" | sort -t',' -k8 -n | head -1)
    if [ -n "$fastest_config" ]; then
        IFS=',' read -r storage restore interface dhcp success initial_ip new_ip total_time <<< "$fastest_config"
        echo "üöÄ –°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (${total_time}s):"
        echo "    $0 -s $storage -r $restore -i $interface -d $dhcp"
    fi

    # –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—É—é –Ω–∞–¥–µ–∂–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (—Å—Ä–µ–¥–∏ —á–∞—Å—Ç–æ —É—Å–ø–µ—à–Ω—ã—Ö)
    reliable_config=$(grep ",true," "$RESULTS_FILE" | sort -t',' -k1,4 -n | head -1)
    if [ -n "$reliable_config" ]; then
        IFS=',' read -r storage restore interface dhcp success initial_ip new_ip total_time <<< "$reliable_config"
        echo "üõ°Ô∏è  –ù–∞–¥–µ–∂–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (${total_time}s):"
        echo "    $0 -s $storage -r $restore -i $interface -d $dhcp"
    fi

    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã
    echo ""
    echo "üìà –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã:"

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —É—Å–ø–µ—à–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    successful_storage=$(grep ",true," "$RESULTS_FILE" | cut -d',' -f1 | sort -n)
    successful_restore=$(grep ",true," "$RESULTS_FILE" | cut -d',' -f2 | sort -n)
    successful_interface=$(grep ",true," "$RESULTS_FILE" | cut -d',' -f3 | sort -n)
    successful_dhcp=$(grep ",true," "$RESULTS_FILE" | cut -d',' -f4 | sort -n)

    if [ -n "$successful_storage" ]; then
        min_storage=$(echo "$successful_storage" | head -1)
        max_storage=$(echo "$successful_storage" | tail -1)
        echo "  Storage timeout: ${min_storage}-${max_storage}s"
    fi

    if [ -n "$successful_restore" ]; then
        min_restore=$(echo "$successful_restore" | head -1)
        max_restore=$(echo "$successful_restore" | tail -1)
        echo "  Restore timeout: ${min_restore}-${max_restore}s"
    fi

    if [ -n "$successful_interface" ]; then
        min_interface=$(echo "$successful_interface" | head -1)
        max_interface=$(echo "$successful_interface" | tail -1)
        echo "  Interface timeout: ${min_interface}-${max_interface}s"
    fi

    if [ -n "$successful_dhcp" ]; then
        min_dhcp=$(echo "$successful_dhcp" | head -1)
        max_dhcp=$(echo "$successful_dhcp" | tail -1)
        echo "  DHCP timeout: ${min_dhcp}-${max_dhcp}s"
    fi

else
    echo "‚ùå –£—Å–ø–µ—à–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    echo ""
    echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥–µ–º–∞"
    echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –º–æ–¥–µ–º –≤ HiLink —Ä–µ–∂–∏–º–µ"
    echo "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å —Ç–∞–π–º–∞—É—Ç—ã"
    echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ usb_modeswitch"
fi

echo ""
echo "üíæ –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $RESULTS_FILE"
echo ""
echo "üî¨ –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "  cat $RESULTS_FILE"
echo ""
echo "üìä –î–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:"
echo "  grep ',true,' $RESULTS_FILE | cut -d',' -f1-4,8 | sort -t',' -k5 -n"

# –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç
SUMMARY_FILE="timeout_optimization_summary.txt"
cat > "$SUMMARY_FILE" << EOF
# –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç–∞–π–º–∞—É—Ç–æ–≤
# –î–∞—Ç–∞: $(date)

–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS
- –£—Å–ø–µ—à–Ω—ã—Ö: $SUCCESSFUL_TESTS
- –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: $(( (SUCCESSFUL_TESTS * 100) / TOTAL_TESTS ))%

EOF

if [ $SUCCESSFUL_TESTS -gt 0 ]; then
    echo "–õ—É—á—à–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:" >> "$SUMMARY_FILE"
    grep ",true," "$RESULTS_FILE" | sort -t',' -k8 -n | head -3 | while IFS=',' read -r storage restore interface dhcp success initial_ip new_ip total_time; do
        echo "- Storage:${storage}s Restore:${restore}s Interface:${interface}s DHCP:${dhcp}s (${total_time}s)" >> "$SUMMARY_FILE"
    done
fi

echo "üìã –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $SUMMARY_FILE"
echo ""
echo "üéâ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
