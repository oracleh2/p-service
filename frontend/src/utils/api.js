// frontend/src/utils/api.js - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –¢–ê–ô–ú–ê–£–¢–û–ú

import axios from 'axios'

// –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä API
const api = axios.create({
  baseURL: process.env.VUE_APP_API_URL || 'http://192.168.1.50:8000',
  timeout: 30000, // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∞–π–º–∞—É—Ç 30 —Å–µ–∫—É–Ω–¥
  headers: {
    'Content-Type': 'application/json',
  },
})

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏
const apiLongTimeout = axios.create({
  baseURL: process.env.VUE_APP_API_URL || 'http://192.168.1.50:8000',
  timeout: 70000, // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç 70 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏ USB –º–æ–¥–µ–º–æ–≤
  headers: {
    'Content-Type': 'application/json',
  },
})

// –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const addAuthToken = (config) => {
  const token = localStorage.getItem('authToken')
  if (token) {
    config.headers.Authorization = `Bearer ${token}`
  }
  return config
}

// –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
const handleResponseError = (error) => {
  if (error.response?.status === 401) {
    localStorage.removeItem('authToken')
    window.location.href = '/login'
  }
  return Promise.reject(error)
}

// –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä—ã –∫ –æ–±–æ–∏–º —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º
[api, apiLongTimeout].forEach(instance => {
  instance.interceptors.request.use(addAuthToken)
  instance.interceptors.response.use(
    response => response,
    handleResponseError
  )
})

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è API –∫–ª–∏–µ–Ω—Ç–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
export const createApiClient = (timeoutMs = 30000) => {
  const customApi = axios.create({
    baseURL: process.env.VUE_APP_API_URL || 'http://192.168.1.50:8000',
    timeout: timeoutMs,
    headers: {
      'Content-Type': 'application/json',
    },
  })

  customApi.interceptors.request.use(addAuthToken)
  customApi.interceptors.response.use(
    response => response,
    handleResponseError
  )

  return customApi
}

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º —Ç–∞–π–º–∞—É—Ç–∞
const rotationApi = {
  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ—Ç–∞—Ü–∏–∏ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 60 —Å–µ–∫—É–Ω–¥)
  testRotation: (deviceId, method) => {
    return apiLongTimeout.post(`/admin/devices/${deviceId}/test-rotation`, { method })
  },

  // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–æ—Ç–∞—Ü–∏–∏ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 70 —Å–µ–∫—É–Ω–¥ –¥–ª—è USB –º–æ–¥–µ–º–æ–≤)
  executeRotation: (deviceId, forceMethod = null) => {
    const data = forceMethod ? { force_method: forceMethod } : {}
    return apiLongTimeout.post(`/admin/devices/${deviceId}/rotate`, data)
  },

  // USB –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç 30-45 —Å–µ–∫—É–Ω–¥)
  usbReboot: (deviceId) => {
    return apiLongTimeout.post(`/admin/devices/${deviceId}/usb-reboot`)
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ —Ä–æ—Ç–∞—Ü–∏–∏ (–±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—Ä–æ—Å)
  getRotationMethods: (deviceId) => {
    return api.get(`/admin/devices/${deviceId}/rotation-methods`)
  },

  // –†–æ—Ç–∞—Ü–∏—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
  rotateAllDevices: () => {
    const extendedTimeout = createApiClient(180000) // 3 –º–∏–Ω—É—Ç—ã
    return extendedTimeout.post('/admin/devices/rotate-all')
  }
}

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
const diagnosticsApi = {
  // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ USB —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  getUsbDiagnostics: (deviceId) => {
    return apiLongTimeout.get(`/admin/devices/${deviceId}/usb-diagnostics`)
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  getDeviceHealth: (deviceId) => {
    return apiLongTimeout.get(`/admin/devices/${deviceId}/health`)
  },

  // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  diagnoseDevice: (deviceId) => {
    return apiLongTimeout.post(`/admin/devices/${deviceId}/diagnose`)
  },

  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  testConnection: (deviceId) => {
    return apiLongTimeout.get(`/admin/devices/${deviceId}/connection-test`)
  }
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É API –æ–±—ä–µ–∫—Ç—É
api.rotation = rotationApi
api.diagnostics = diagnosticsApi
api.createClient = createApiClient
api.longTimeout = apiLongTimeout

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (process.env.NODE_ENV === 'development') {
  [api, apiLongTimeout].forEach(instance => {
    instance.interceptors.request.use(request => {
      console.log('üöÄ API Request:', {
        method: request.method?.toUpperCase(),
        url: request.url,
        timeout: request.timeout,
        data: request.data
      })
      return request
    })

    instance.interceptors.response.use(
      response => {
        console.log('‚úÖ API Response:', {
          status: response.status,
          url: response.config.url,
          duration: response.config.metadata?.endTime - response.config.metadata?.startTime
        })
        return response
      },
      error => {
        console.error('‚ùå API Error:', {
          status: error.response?.status,
          url: error.config?.url,
          message: error.message,
          timeout: error.code === 'ECONNABORTED'
        })
        return Promise.reject(error)
      }
    )
  })
}

export default api

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏
export const timeoutUtils = {
  // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  timeouts: {
    fast: 5000,          // 5 —Å–µ–∫—É–Ω–¥ - –±—ã—Å—Ç—Ä—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    standard: 30000,     // 30 —Å–µ–∫—É–Ω–¥ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    rotation: 70000,     // 70 —Å–µ–∫—É–Ω–¥ - —Ä–æ—Ç–∞—Ü–∏—è IP
    bulk: 180000,        // 3 –º–∏–Ω—É—Ç—ã - –º–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    discovery: 120000    // 2 –º–∏–Ω—É—Ç—ã - –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–≥–æ —Ç–∞–π–º–∞—É—Ç–∞ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏
  getRecommendedTimeout: (operation, deviceType = null) => {
    const { timeouts } = timeoutUtils

    switch (operation) {
      case 'rotation':
        return deviceType === 'usb_modem' ? timeouts.rotation : timeouts.standard
      case 'test_rotation':
        return timeouts.rotation
      case 'discovery':
        return timeouts.discovery
      case 'bulk_rotation':
        return timeouts.bulk
      case 'diagnostics':
        return timeouts.rotation
      default:
        return timeouts.standard
    }
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ API –∫–ª–∏–µ–Ω—Ç–∞ —Å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
  createClientForOperation: (operation, deviceType = null) => {
    const timeout = timeoutUtils.getRecommendedTimeout(operation, deviceType)
    return createApiClient(timeout)
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
export { api as apiClient, apiLongTimeout, rotationApi, diagnosticsApi }
