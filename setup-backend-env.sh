#!/bin/bash
# setup-backend-env.sh - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è backend

set -e

echo "üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Mobile Proxy Service Backend"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ (–≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è docker-compose.yml)"
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend
cd backend

echo "üìÇ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.11+ –≤ WSL:"
    echo "   sudo apt update"
    echo "   sudo apt install python3 python3-pip python3-venv python3-dev"
    exit 1
fi

python_version=$(python3 --version)
echo "‚úÖ –ù–∞–π–¥–µ–Ω: $python_version"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python (–Ω—É–∂–µ–Ω 3.11+)
python_major=$(python3 -c "import sys; print(sys.version_info.major)")
python_minor=$(python3 -c "import sys; print(sys.version_info.minor)")

if [ "$python_major" -lt 3 ] || ([ "$python_major" -eq 3 ] && [ "$python_minor" -lt 11 ]); then
    echo "‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Python 3.11+, –Ω–æ –±—É–¥–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å $python_version"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ venv –º–æ–¥—É–ª—è
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ python3-venv..."
if ! python3 -c "import venv" 2>/dev/null; then
    echo "‚ùå –ú–æ–¥—É–ª—å venv –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ:"
    echo "   sudo apt install python3-venv"
    exit 1
fi
echo "‚úÖ –ú–æ–¥—É–ª—å venv –¥–æ—Å—Ç—É–ø–µ–Ω"

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo ""
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

if [ -d "venv" ]; then
    echo "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è venv —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    read -p "–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        rm -rf venv
    else
        echo "üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    fi
fi

if [ ! -d "venv" ]; then
    echo "üî® –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv venv
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo ""
echo "üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source venv/bin/activate

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
if [ "$VIRTUAL_ENV" != "" ]; then
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: $VIRTUAL_ENV"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    exit 1
fi

# –û–±–Ω–æ–≤–ª—è–µ–º pip
echo ""
echo "‚¨ÜÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
pip install --upgrade pip
echo "‚úÖ pip –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏: $(pip --version)"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo ""
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

if [ ! -f "requirements.txt" ]; then
    echo "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backend/"
    exit 1
fi

echo "üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã –∏–∑ requirements.txt..."
pip install -r requirements.txt

echo ""
echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–ª—é—á–µ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."

packages_to_check=(
    "fastapi"
    "uvicorn"
    "sqlalchemy"
    "asyncpg"
    "redis"
    "pydantic"
)

for package in "${packages_to_check[@]}"; do
    if pip show "$package" &> /dev/null; then
        version=$(pip show "$package" | grep Version | cut -d' ' -f2)
        echo "  ‚úÖ $package: $version"
    else
        echo "  ‚ùå $package: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù"
    fi
done

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏..."

cat > activate-env.sh << 'EOF'
#!/bin/bash
# activate-env.sh - –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

if [ -f "venv/bin/activate" ]; then
    echo "‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    echo "üêç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: source activate-env.sh"
    echo "üì¶ –ò–ª–∏: source venv/bin/activate"
    echo ""
    echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:"
    echo "  python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

    # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ source, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º
    if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
        source venv/bin/activate
        echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏"
    fi
else
    echo "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi
EOF

chmod +x activate-env.sh
echo "‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç activate-env.sh"

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –¥–ª—è backend –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
echo ""
echo "‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

if [ ! -f ".env" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è backend..."
    cat > .env << 'EOF'
# Database
DATABASE_URL=postgresql://proxy_user:proxy_password@localhost:5432/mobile_proxy

# Redis
REDIS_URL=redis://localhost:6379

# Security
SECRET_KEY=dev-secret-key-change-in-production
JWT_SECRET_KEY=dev-jwt-secret-key-change-in-production

# Proxy settings
DEFAULT_ROTATION_INTERVAL=600
MAX_DEVICES=50
MAX_REQUESTS_PER_MINUTE=100

# Development
DEBUG=true
RELOAD=true
LOG_LEVEL=DEBUG

# API settings
API_V1_STR=/api/v1
PROJECT_NAME=Mobile Proxy Service
PROJECT_VERSION=1.0.0
EOF
    echo "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª"
else
    echo "üìã .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:"
echo ""
echo "1Ô∏è‚É£  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:"
echo "   cd .."
echo "   ./start-dev.sh"
echo ""
echo "2Ô∏è‚É£  –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ):"
echo "   source venv/bin/activate"
echo "   # –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç:"
echo "   ./activate-env.sh"
echo ""
echo "3Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:"
echo "   python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
echo ""
echo "4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É:"
echo "   curl http://localhost:8000/health"
echo "   # –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/docs –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   pip list                    # –°–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
echo "   pip freeze > requirements.txt  # –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo "   deactivate                 # –í—ã–π—Ç–∏ –∏–∑ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo ""
echo "üìÅ –¢–µ–∫—É—â–µ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:"
echo "   –ü—É—Ç—å: $VIRTUAL_ENV"
echo "   Python: $(which python)"
echo "   pip: $(which pip)"
echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!"
