#!/bin/bash
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Huawei –º–æ–¥–µ–º–æ–≤ –≤ Ubuntu
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–æ–¥–µ–º—ã E3372, E3372h, E5770s –∏ –¥—Ä—É–≥–∏–µ

# –§–ª–∞–≥–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
CONFIGURE_WEB_INTERFACE=false

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        --with-web)
            CONFIGURE_WEB_INTERFACE=true
            shift
            ;;
        -h|--help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–û–ø—Ü–∏–∏:"
            echo "  --with-web    –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–¥–µ–º–æ–≤"
            echo "  -h, --help    –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  $0                # –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö –º–æ–¥–µ–º–æ–≤"
            echo "  $0 --with-web     # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ -h –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

echo "üîß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Huawei –º–æ–¥–µ–º–æ–≤"
echo "=========================================="

# –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –º–æ–¥–µ–º–æ–≤ Huawei (vendor:product)
HUAWEI_MODEMS=(
    "12d1:14dc"  # E3372 HiLink
    "12d1:1f01"  # E3372 Stick
    "12d1:157d"  # E3372h
    "12d1:14db"  # E3372s
    "12d1:1506"  # E5770s
    "12d1:1573"  # E5770
    "12d1:15ca"  # E8372
    "12d1:1442"  # E5573
    "12d1:14fe"  # E5577
)

# –ê—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π –º–æ–¥–µ–º–æ–≤
declare -A MODEM_NAMES=(
    ["12d1:14dc"]="E3372 HiLink"
    ["12d1:1f01"]="E3372 Stick"
    ["12d1:157d"]="E3372h"
    ["12d1:14db"]="E3372s"
    ["12d1:1506"]="E5770s"
    ["12d1:1573"]="E5770"
    ["12d1:15ca"]="E8372"
    ["12d1:1442"]="E5573"
    ["12d1:14fe"]="E5577"
)

# –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö Huawei –º–æ–¥–µ–º–æ–≤
echo "1. –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö Huawei –º–æ–¥–µ–º–æ–≤..."

FOUND_MODEMS=()
for modem_id in "${HUAWEI_MODEMS[@]}"; do
    if lsusb | grep -q "$modem_id"; then
        FOUND_MODEMS+=("$modem_id")
        modem_name="${MODEM_NAMES[$modem_id]}"
        bus_device=$(lsusb | grep "$modem_id" | awk '{print $2 ":" $4}' | tr -d ':')
        echo "‚úÖ –ù–∞–π–¥–µ–Ω: Huawei $modem_name (ID: $modem_id, Bus/Device: $bus_device)"
    fi
done

if [ ${#FOUND_MODEMS[@]} -eq 0 ]; then
    echo "‚ùå Huawei –º–æ–¥–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ USB —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:"
    lsusb | grep -i huawei || echo "  –ù–µ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤ Huawei"
    echo ""
    echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:"
    echo "  - –ú–æ–¥–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ USB –ø–æ—Ä—Ç—É"
    echo "  - USB –∫–∞–±–µ–ª—å –∏—Å–ø—Ä–∞–≤–µ–Ω"
    echo "  - –ú–æ–¥–µ–º –≤–∫–ª—é—á–µ–Ω"
    exit 1
fi

echo ""
echo "üìä –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–º–æ–≤: ${#FOUND_MODEMS[@]}"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –∫–∞–∂–¥–æ–≥–æ –º–æ–¥–µ–º–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo ""
echo "2. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∂–∏–º–æ–≤ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–º–æ–≤..."

declare -A MODEM_INFO
MODEMS_TO_CONFIGURE=()

for modem_id in "${FOUND_MODEMS[@]}"; do
    echo ""
    echo "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º $modem_id (${MODEM_NAMES[$modem_id]})..."

    # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–º–µ
    DEVICE_INFO=$(lsusb -v -d "$modem_id" 2>/dev/null)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –º–æ–¥–µ–º–∞
    if echo "$DEVICE_INFO" | grep -q "bInterfaceClass.*9 Hub"; then
        mode="hub"
        echo "  üîå –†–µ–∂–∏–º: USB Hub (–≤–æ–∑–º–æ–∂–Ω–æ, —Å–æ—Å—Ç–∞–≤–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)"
    elif echo "$DEVICE_INFO" | grep -q "bInterfaceClass.*2 Communications"; then
        mode="hilink"
        echo "  üì± –†–µ–∂–∏–º: HiLink (–º–æ–¥–µ–º-—Ä–æ—É—Ç–µ—Ä)"
    elif echo "$DEVICE_INFO" | grep -q "bInterfaceClass.*8 Mass Storage"; then
        mode="storage"
        echo "  üíæ –†–µ–∂–∏–º: –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å (—Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è)"
    elif echo "$DEVICE_INFO" | grep -q "bInterfaceClass.*255 Vendor Specific"; then
        mode="modem"
        echo "  üì° –†–µ–∂–∏–º: –ú–æ–¥–µ–º (Stick mode)"
    else
        mode="unknown"
        echo "  ‚ùì –†–µ–∂–∏–º: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
    fi

    # –ü–æ–ª—É—á–∞–µ–º Bus –∏ Device –Ω–æ–º–µ—Ä–∞
    bus_device=$(lsusb | grep "$modem_id" | awk '{print $2 ":" $4}' | tr -d ':')
    bus_num=$(echo "$bus_device" | cut -d: -f1)
    dev_num=$(echo "$bus_device" | cut -d: -f2)

    # –ò—â–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
    network_interface=""
    for interface in $(ip link show | grep -E "enx|usb" | cut -d: -f2 | tr -d ' '); do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω –ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å —ç—Ç–∏–º USB —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º
        if [ -d "/sys/class/net/$interface/device" ]; then
            usb_path=$(readlink "/sys/class/net/$interface/device" 2>/dev/null | grep -o "[0-9]*-[0-9]*" | head -1)
            if [ -n "$usb_path" ]; then
                interface_bus=$(echo "$usb_path" | cut -d- -f1)
                # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
                if [ "$interface_bus" = "$bus_num" ]; then
                    network_interface="$interface"
                    break
                fi
            fi
        fi
    done

    if [ -n "$network_interface" ]; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        if ip addr show "$network_interface" | grep -q "inet "; then
            ip_address=$(ip addr show "$network_interface" | grep "inet " | awk '{print $2}' | head -1)
            echo "  üåê –°–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $network_interface (IP: $ip_address) ‚úÖ"
            interface_status="configured"
        else
            echo "  üåê –°–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $network_interface (–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω) ‚ö†Ô∏è"
            interface_status="not_configured"
        fi
    else
        echo "  üåê –°–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå"
        interface_status="missing"
    fi

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–º–µ
    MODEM_INFO["${modem_id}_mode"]="$mode"
    MODEM_INFO["${modem_id}_bus_device"]="$bus_device"
    MODEM_INFO["${modem_id}_interface"]="$network_interface"
    MODEM_INFO["${modem_id}_interface_status"]="$interface_status"

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    if [ "$mode" = "storage" ] || [ "$interface_status" = "missing" ] || [ "$interface_status" = "not_configured" ]; then
        MODEMS_TO_CONFIGURE+=("$modem_id")
        echo "  üìù –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: –î–∞"
    else
        echo "  üìù –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: –ù–µ—Ç"
    fi
done

echo ""
echo "3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º usb-modeswitch
if ! command -v usb_modeswitch &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º usb-modeswitch..."
    sudo apt update
    sudo apt install -y usb-modeswitch usb-modeswitch-data
else
    echo "‚úÖ usb-modeswitch —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–º–∞–º–∏
if ! command -v wvdial &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –º–æ–¥–µ–º–æ–≤..."
    sudo apt install -y ppp wvdial
else
    echo "‚úÖ –ü–∞–∫–µ—Ç—ã –¥–ª—è –º–æ–¥–µ–º–æ–≤ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º NetworkManager
if ! systemctl is-active --quiet NetworkManager; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º NetworkManager..."
    sudo apt install -y network-manager
    sudo systemctl enable NetworkManager
    sudo systemctl start NetworkManager
else
    echo "‚úÖ NetworkManager —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
echo "4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ–º–æ–≤..."

if [ ${#MODEMS_TO_CONFIGURE[@]} -eq 0 ]; then
    echo "‚úÖ –í—Å–µ –º–æ–¥–µ–º—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
else
    echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º ${#MODEMS_TO_CONFIGURE[@]} –º–æ–¥–µ–º(–æ–≤)..."

    for modem_id in "${MODEMS_TO_CONFIGURE[@]}"; do
        echo ""
        echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ $modem_id (${MODEM_NAMES[$modem_id]})..."

        mode="${MODEM_INFO[${modem_id}_mode]}"

        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –º–æ–¥–µ–º –∏–∑ —Ä–µ–∂–∏–º–∞ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—è
        if [ "$mode" = "storage" ]; then
            echo "  üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∏–∑ —Ä–µ–∂–∏–º–∞ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—è..."
            vendor=$(echo "$modem_id" | cut -d: -f1)
            product=$(echo "$modem_id" | cut -d: -f2)

            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è usb_modeswitch
            if [ -f "/usr/share/usb_modeswitch/$modem_id" ]; then
                sudo usb_modeswitch -v "$vendor" -p "$product" -c "/usr/share/usb_modeswitch/$modem_id"
            else
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Huawei
                sudo usb_modeswitch -v "$vendor" -p "$product" -M '55534243123456780000000000000a11062000000000000100000000000000'
            fi

            echo "  ‚è≥ –ñ–¥–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è (15 —Å–µ–∫—É–Ω–¥)..."
            sleep 15
        fi

        # –ò—â–µ–º –ø–æ—è–≤–∏–≤—à–∏–µ—Å—è —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        echo "  üîç –ü–æ–∏—Å–∫ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤..."
        interface_found=false

        for attempt in {1..20}; do
            # –ò—â–µ–º –Ω–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å USB
            for interface in $(ip link show | grep -E "enx|usb" | cut -d: -f2 | tr -d ' '); do
                if [ -z "${MODEM_INFO[${modem_id}_interface]}" ] || [ "${MODEM_INFO[${modem_id}_interface]}" != "$interface" ]; then
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω
                    if ip link show "$interface" | grep -q "state UP\|state UNKNOWN"; then
                        echo "  ‚úÖ –ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $interface"
                        MODEM_INFO["${modem_id}_interface"]="$interface"
                        interface_found=true
                        break
                    fi
                fi
            done

            if [ "$interface_found" = true ]; then
                break
            fi

            echo "  ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞... ($attempt/20)"
            sleep 3
        done

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        if [ "$interface_found" = true ]; then
            interface="${MODEM_INFO[${modem_id}_interface]}"
            echo "  üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ $interface..."

            # –ü–æ–¥–Ω–∏–º–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            sudo ip link set "$interface" up

            # –ü–æ–ª—É—á–∞–µ–º IP —á–µ—Ä–µ–∑ DHCP
            echo "  üåê –ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞..."
            if command -v dhclient &> /dev/null; then
                timeout 15 sudo dhclient "$interface" 2>/dev/null || true
            elif command -v dhcpcd &> /dev/null; then
                timeout 15 sudo dhcpcd "$interface" 2>/dev/null || true
            fi

            sleep 5

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if ip addr show "$interface" | grep -q "inet "; then
                ip_address=$(ip addr show "$interface" | grep "inet " | awk '{print $2}' | head -1)
                echo "  ‚úÖ IP –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–µ–Ω: $ip_address"
                MODEM_INFO["${modem_id}_interface_status"]="configured"

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç
                gateway=$(ip route show dev "$interface" | grep default | awk '{print $3}' | head -1)
                if [ -n "$gateway" ]; then
                    echo "  ‚úÖ –®–ª—é–∑: $gateway"
                fi
            else
                echo "  ‚ö†Ô∏è  IP –∞–¥—Ä–µ—Å –Ω–µ –ø–æ–ª—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
                MODEM_INFO["${modem_id}_interface_status"]="manual_required"
            fi
        else
            echo "  ‚ùå –°–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
            MODEM_INFO["${modem_id}_interface_status"]="missing"
        fi
    done
fi

echo ""
echo "5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)..."

if [ "$CONFIGURE_WEB_INTERFACE" = true ]; then
    echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –º–æ–¥–µ–º–æ–≤..."

    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
    WEB_IPS=(
        "192.168.8.1"     # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Huawei
        "192.168.1.1"     # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π
        "192.168.43.1"    # –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞
        "192.168.0.1"     # –†–æ—É—Ç–µ—Ä —Ä–µ–∂–∏–º
        "192.168.107.1"   # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π
        "192.168.100.1"   # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π
        "10.0.0.1"        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Å–µ—Ç—å
    )

    declare -A WORKING_WEB_INTERFACES

    echo "  üîç –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤..."

    for ip in "${WEB_IPS[@]}"; do
        echo -n "    –ü—Ä–æ–≤–µ—Ä—è–µ–º $ip... "

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        if ping -c 1 -W 2 "$ip" >/dev/null 2>&1; then
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Huawei
            if curl -s --connect-timeout 3 "http://$ip" | grep -qi "huawei\|mobile.*wifi\|lte\|4g"; then
                echo "‚úÖ –ù–∞–π–¥–µ–Ω"

                # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–º–µ
                device_info=$(curl -s --connect-timeout 5 "http://$ip/api/device/information" 2>/dev/null)
                if [ -n "$device_info" ]; then
                    model=$(echo "$device_info" | grep -o '<DeviceName>[^<]*</DeviceName>' | sed 's/<[^>]*>//g')
                    imei=$(echo "$device_info" | grep -o '<Imei>[^<]*</Imei>' | sed 's/<[^>]*>//g')

                    if [ -n "$model" ]; then
                        echo "      üì± –ú–æ–¥–µ–ª—å: $model"
                        WORKING_WEB_INTERFACES["$ip"]="$model"
                    fi
                    if [ -n "$imei" ]; then
                        echo "      üÜî IMEI: $imei"
                    fi

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                    status_info=$(curl -s --connect-timeout 5 "http://$ip/api/monitoring/status" 2>/dev/null)
                    if [ -n "$status_info" ]; then
                        connection_status=$(echo "$status_info" | grep -o '<ConnectionStatus>[^<]*</ConnectionStatus>' | sed 's/<[^>]*>//g')
                        case "$connection_status" in
                            "901") echo "      üì∂ –°—Ç–∞—Ç—É—Å: –ü–æ–¥–∫–ª—é—á–µ–Ω–æ" ;;
                            "902") echo "      üì∂ –°—Ç–∞—Ç—É—Å: –û—Ç–∫–ª—é—á–µ–Ω–æ" ;;
                            "903") echo "      üì∂ –°—Ç–∞—Ç—É—Å: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ..." ;;
                            "904") echo "      üì∂ –°—Ç–∞—Ç—É—Å: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ..." ;;
                            *) echo "      üì∂ –°—Ç–∞—Ç—É—Å: $connection_status" ;;
                        esac

                        # –ï—Å–ª–∏ –º–æ–¥–µ–º –æ—Ç–∫–ª—é—á–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å
                        if [ "$connection_status" = "902" ]; then
                            echo "      üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
                            token=$(curl -s "http://$ip/api/webserver/SesTokInfo" | grep -o '<SesInfo>[^<]*</SesInfo>' | sed 's/<[^>]*>//g')
                            if [ -n "$token" ]; then
                                curl -s -X POST \
                                    -H "Content-Type: application/x-www-form-urlencoded" \
                                    -H "__RequestVerificationToken: $token" \
                                    -d '<?xml version="1.0" encoding="UTF-8"?><request><Action>1</Action></request>' \
                                    "http://$ip/api/dialup/dial" >/dev/null 2>&1

                                sleep 5

                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                                new_status=$(curl -s "http://$ip/api/monitoring/status" | grep -o '<ConnectionStatus>[^<]*</ConnectionStatus>' | sed 's/<[^>]*>//g')
                                if [ "$new_status" = "901" ] || [ "$new_status" = "904" ]; then
                                    echo "      ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
                                else
                                    echo "      ‚ö†Ô∏è  –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–µ–Ω PIN –∫–æ–¥)"
                                fi
                            fi
                        fi
                    fi
                else
                    echo "      ‚ö†Ô∏è  API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                    WORKING_WEB_INTERFACES["$ip"]="Unknown model"
                fi
            else
                echo "‚ùå –ù–µ Huawei"
            fi
        else
            echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    done

    if [ ${#WORKING_WEB_INTERFACES[@]} -eq 0 ]; then
        echo ""
        echo "  ‚ö†Ô∏è  –ê–∫—Ç–∏–≤–Ω—ã–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        echo "  üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
        echo "    - –ú–æ–¥–µ–º—ã –≤ —Ä–µ–∂–∏–º–µ Stick (–Ω–µ HiLink)"
        echo "    - –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ IP"
        echo "    - SIM-–∫–∞—Ä—Ç—ã –Ω–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã"
    else
        echo ""
        echo "  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤: ${#WORKING_WEB_INTERFACES[@]}"
        for ip in "${!WORKING_WEB_INTERFACES[@]}"; do
            echo "    üåê $ip - ${WORKING_WEB_INTERFACES[$ip]}"
        done
    fi
else
    echo "‚è≠Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ --with-web –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è)"
fi

echo ""
echo "6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..."

echo "üìä –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –º–æ–¥–µ–º–æ–≤:"
echo "===================================="

TOTAL_CONFIGURED=0
TOTAL_WORKING=0

for modem_id in "${FOUND_MODEMS[@]}"; do
    echo ""
    echo "üì± $modem_id (${MODEM_NAMES[$modem_id]}):"

    mode="${MODEM_INFO[${modem_id}_mode]}"
    interface="${MODEM_INFO[${modem_id}_interface]}"
    interface_status="${MODEM_INFO[${modem_id}_interface_status]}"

    echo "  üîß –†–µ–∂–∏–º: $mode"

    if [ -n "$interface" ]; then
        echo "  üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $interface"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        if ip addr show "$interface" 2>/dev/null | grep -q "inet "; then
            ip_address=$(ip addr show "$interface" | grep "inet " | awk '{print $2}' | head -1)
            echo "  üìç IP: $ip_address"

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            echo -n "  üåç –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: "
            if timeout 10 curl -s --interface "$interface" http://httpbin.org/ip >/dev/null 2>&1; then
                external_ip=$(timeout 10 curl -s --interface "$interface" http://httpbin.org/ip 2>/dev/null | grep -o '"origin": "[^"]*"' | cut -d'"' -f4 2>/dev/null)
                if [ -n "$external_ip" ]; then
                    echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç (–≤–Ω–µ—à–Ω–∏–π IP: $external_ip)"
                    TOTAL_WORKING=$((TOTAL_WORKING + 1))
                else
                    echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
                    TOTAL_WORKING=$((TOTAL_WORKING + 1))
                fi
            else
                echo "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
            fi

            TOTAL_CONFIGURED=$((TOTAL_CONFIGURED + 1))
        else
            echo "  üìç IP: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            echo "  üåç –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    else
        echo "  üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo "  üìç IP: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        echo "  üåç –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    case "$interface_status" in
        "configured") echo "  ‚úÖ –°—Ç–∞—Ç—É—Å: –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω" ;;
        "not_configured") echo "  ‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IP" ;;
        "missing") echo "  ‚ùå –°—Ç–∞—Ç—É—Å: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω" ;;
        "manual_required") echo "  üîß –°—Ç–∞—Ç—É—Å: –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏" ;;
        *) echo "  ‚ùì –°—Ç–∞—Ç—É—Å: $interface_status" ;;
    esac
done

echo ""
echo "üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "===================="
echo "üì± –í—Å–µ–≥–æ –º–æ–¥–µ–º–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${#FOUND_MODEMS[@]}"
echo "üîß –ú–æ–¥–µ–º–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ: $TOTAL_CONFIGURED"
echo "üåç –ú–æ–¥–µ–º–æ–≤ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º: $TOTAL_WORKING"
echo "üì¶ –ú–æ–¥–µ–º–æ–≤ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: $((${#FOUND_MODEMS[@]} - TOTAL_CONFIGURED))"

if [ "$CONFIGURE_WEB_INTERFACE" = true ]; then
    if [ ${#WORKING_WEB_INTERFACES[@]} -gt 0 ]; then
        echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ: ${#WORKING_WEB_INTERFACES[@]}"
    fi
fi

echo ""
echo "üõ†Ô∏è  –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "========================="

echo "üìã –í—Å–µ —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –º–æ–¥–µ–º–æ–≤:"
for modem_id in "${FOUND_MODEMS[@]}"; do
    interface="${MODEM_INFO[${modem_id}_interface]}"
    if [ -n "$interface" ]; then
        if ip addr show "$interface" 2>/dev/null | grep -q "inet "; then
            ip_addr=$(ip addr show "$interface" | grep "inet " | awk '{print $2}' | head -1)
            echo "  $interface: $ip_addr (${MODEM_NAMES[$modem_id]})"
        else
            echo "  $interface: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (${MODEM_NAMES[$modem_id]})"
        fi
    fi
done

if [ "$CONFIGURE_WEB_INTERFACE" = true ]; then
    if [ ${#WORKING_WEB_INTERFACES[@]} -gt 0 ]; then
        echo ""
        echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –º–æ–¥–µ–º–æ–≤:"
        for ip in "${!WORKING_WEB_INTERFACES[@]}"; do
            echo "  http://$ip (${WORKING_WEB_INTERFACES[$ip]})"
        done
    fi
fi

echo ""
echo "üîß –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
echo "==========================="
echo "# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö USB –º–æ–¥–µ–º–æ–≤:"
echo "lsusb | grep 12d1"
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:"
echo "ip addr show | grep -E 'enx|usb'"
echo ""
echo "# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ DHCP –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:"
echo "sudo dhclient <interface_name>"
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"
echo "curl --interface <interface_name> http://httpbin.org/ip"

if [ $TOTAL_WORKING -eq ${#FOUND_MODEMS[@]} ] && [ $TOTAL_WORKING -gt 0 ]; then
    echo ""
    echo "üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –º–æ–¥–µ–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç!"
    echo ""
    echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "=================="
    echo "1. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –º–æ–¥–µ–º—ã –≤ Mobile Proxy Service"
    echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–æ—Ç–∞—Ü–∏—é IP"
    echo "3. –î–æ–±–∞–≤—å—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–µ–º–æ–≤"
    echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫—É –Ω–∞–≥—Ä—É–∑–∫–∏ –º–µ–∂–¥—É –º–æ–¥–µ–º–∞–º–∏"
elif [ $TOTAL_WORKING -gt 0 ]; then
    echo ""
    echo "‚úÖ –ß–∞—Å—Ç—å –º–æ–¥–µ–º–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "‚ö†Ô∏è  –î–ª—è –Ω–µ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –º–æ–¥–µ–º–æ–≤:"
    echo "=============================="
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SIM-–∫–∞—Ä—Ç—ã –∏ PIN –∫–æ–¥—ã"
    echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç—Ä–∞—Ñ–∏–∫–∞"
    echo "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä—É—á–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    echo "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å --with-web"
else
    echo ""
    echo "‚ö†Ô∏è  –ù–∏ –æ–¥–∏–Ω –º–æ–¥–µ–º –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é"
    echo ""
    echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º:"
    echo "====================================="
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å --with-web –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤"
    echo "2. –í—Å—Ç–∞–≤—å—Ç–µ SIM-–∫–∞—Ä—Ç—ã —Å –∞–∫—Ç–∏–≤–Ω—ã–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç–∞—Ä–∏—Ñ–æ–º"
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ PIN –∫–æ–¥—ã SIM-–∫–∞—Ä—Ç"
    echo "4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–¥–µ–º—ã –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"
    echo "5. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å –º–æ–¥–µ–º—ã –∫ –¥—Ä—É–≥–∏–º USB –ø–æ—Ä—Ç–∞–º"
fi

echo ""
echo "üèÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
