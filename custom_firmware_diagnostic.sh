#!/bin/bash
# –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –º–æ–¥–µ–º–æ–≤ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –ø—Ä–æ—à–∏–≤–∫–æ–π
# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–º–∞ –±–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–π

echo "üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–¥–µ–º–∞ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –ø—Ä–æ—à–∏–≤–∫–æ–π"
echo "============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# IP –∞–¥—Ä–µ—Å –º–æ–¥–µ–º–∞ (–∏–∑ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö)
MODEM_IP="192.168.107.1"
INTERFACE="enx0c5b8f279a64"  # –ò–∑ –≤–∞—à–µ–≥–æ ip a

echo "üéØ –¶–µ–ª–µ–≤–æ–π –º–æ–¥–µ–º: $MODEM_IP"
echo "üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $INTERFACE"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ curl —Å —Ç–∞–π–º–∞—É—Ç–æ–º
safe_curl() {
    local url=$1
    local additional_args=${2:-""}
    timeout 5 curl -s --connect-timeout 3 $additional_args "$url" 2>/dev/null
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
check_connectivity() {
    echo -e "${BLUE}1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏${NC}"
    echo "================================================"

    echo -n "üåê Ping —Ç–µ—Å—Ç... "
    if timeout 3 ping -c 1 -W 1 "$MODEM_IP" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        exit 1
    fi

    echo -n "üîå HTTP —Ç–µ—Å—Ç... "
    if safe_curl "http://$MODEM_IP" >/dev/null; then
        echo -e "${GREEN}‚úÖ HTTP —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå HTTP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        exit 1
    fi

    echo -n "üîí HTTPS —Ç–µ—Å—Ç... "
    if safe_curl "https://$MODEM_IP" >/dev/null; then
        echo -e "${GREEN}‚úÖ HTTPS —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è HTTPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    echo ""
}

# –ê–Ω–∞–ª–∏–∑ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
analyze_homepage() {
    echo -e "${BLUE}2. –ê–Ω–∞–ª–∏–∑ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã${NC}"
    echo "================================================"

    local homepage=$(safe_curl "http://$MODEM_IP")

    if [ -z "$homepage" ]; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É${NC}"
        return 1
    fi

    echo "üìÑ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: $(echo "$homepage" | wc -c) –±–∞–π—Ç"
    echo "üìù –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:"
    echo "$homepage" | head -c 200
    echo ""

    # –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    echo "üîç –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:"

    # –ü–æ–∏—Å–∫ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Ä–æ—É—Ç–µ—Ä–∞/–º–æ–¥–µ–º–∞
    patterns=(
        "huawei|HUAWEI"
        "router|Router|ROUTER"
        "modem|Modem|MODEM"
        "4g|4G|LTE|lte"
        "hilink|HiLink|HILINK"
        "admin|Admin|ADMIN"
        "login|Login|LOGIN"
        "password|Password|PASSWORD"
        "api|API"
        "device|Device|DEVICE"
        "status|Status|STATUS"
        "signal|Signal|SIGNAL"
        "network|Network|NETWORK"
        "wifi|WiFi|WIFI"
        "mobile|Mobile|MOBILE"
    )

    for pattern in "${patterns[@]}"; do
        if echo "$homepage" | grep -qi "$pattern"; then
            echo -e "  ‚úÖ –ù–∞–π–¥–µ–Ω–æ: ${GREEN}$pattern${NC}"
        fi
    done

    echo ""
    echo "üè∑Ô∏è HTML —Ç–µ–≥–∏ –∏ –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "$homepage" | grep -i "<title>" | head -1
    echo "$homepage" | grep -i "generator\|author\|description" | head -3
    echo ""
}

# –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—É—Ç–µ–π
scan_endpoints() {
    echo -e "${BLUE}3. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints${NC}"
    echo "================================================"

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ Huawei –ø—É—Ç–∏
    local huawei_paths=(
        "/api/device/information"
        "/api/device/signal"
        "/api/monitoring/status"
        "/api/webserver/SesTokInfo"
        "/api/net/current-network"
        "/api/net/net-mode"
        "/api/device/control"
        "/api/wlan/basic-settings"
        "/api/monitoring/traffic-statistics"
    )

    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–æ—à–∏–≤–æ–∫
    local custom_paths=(
        "/status"
        "/info"
        "/device"
        "/api"
        "/cgi-bin/luci"
        "/cgi-bin/api"
        "/admin"
        "/config"
        "/system"
        "/modem"
        "/mobile"
        "/lte"
        "/4g"
        "/json"
        "/xml"
        "/data"
        "/stats"
        "/signal"
        "/network"
    )

    # OpenWrt –ø—É—Ç–∏ (—á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–æ—à–∏–≤–∫–∞—Ö)
    local openwrt_paths=(
        "/cgi-bin/luci/rpc/uci"
        "/cgi-bin/luci/rpc/sys"
        "/ubus"
        "/cgi-bin/status"
        "/cgi-bin/config"
    )

    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö Huawei API:"
    for path in "${huawei_paths[@]}"; do
        local response=$(safe_curl "http://$MODEM_IP$path")
        if [ -n "$response" ] && ! echo "$response" | grep -qi "not found\|404\|error"; then
            echo -e "  ‚úÖ ${GREEN}$path${NC} - —Ä–∞–±–æ—Ç–∞–µ—Ç"
            echo "     $(echo "$response" | head -c 100 | tr '\n' ' ')..."
        else
            echo -e "  ‚ùå $path - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    done

    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø—É—Ç–µ–π:"
    for path in "${custom_paths[@]}"; do
        local response=$(safe_curl "http://$MODEM_IP$path")
        if [ -n "$response" ] && ! echo "$response" | grep -qi "not found\|404\|error"; then
            echo -e "  ‚úÖ ${GREEN}$path${NC} - –Ω–∞–π–¥–µ–Ω!"
            echo "     $(echo "$response" | head -c 100 | tr '\n' ' ')..."
        fi
    done

    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenWrt/LEDE –ø—É—Ç–µ–π:"
    for path in "${openwrt_paths[@]}"; do
        local response=$(safe_curl "http://$MODEM_IP$path")
        if [ -n "$response" ] && ! echo "$response" | grep -qi "not found\|404\|error"; then
            echo -e "  ‚úÖ ${GREEN}$path${NC} - –Ω–∞–π–¥–µ–Ω!"
            echo "     $(echo "$response" | head -c 100 | tr '\n' ' ')..."
        fi
    done
    echo ""
}

# –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
try_authentication() {
    echo -e "${BLUE}4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏${NC}"
    echo "================================================"

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ª–æ–≥–∏–Ω—ã/–ø–∞—Ä–æ–ª–∏ –¥–ª—è Huawei
    local credentials=(
        "admin:admin"
        "admin:password"
        "admin:"
        "root:admin"
        "user:user"
        "admin:12345"
        "admin:1234"
        "admin:root"
    )

    echo "üîë –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:"

    for cred in "${credentials[@]}"; do
        local login=$(echo $cred | cut -d: -f1)
        local pass=$(echo $cred | cut -d: -f2)

        echo -n "  –ü—Ä–æ–±—É–µ–º $login:$pass... "

        # –ü–æ–ø—ã—Ç–∫–∞ Basic Auth
        local auth_response=$(safe_curl "http://$MODEM_IP/api/device/information" "-u $login:$pass")

        if [ -n "$auth_response" ] && echo "$auth_response" | grep -qi "devicename\|imei\|hardware"; then
            echo -e "${GREEN}‚úÖ –£—Å–ø–µ—Ö!${NC}"
            echo "     –û—Ç–≤–µ—Ç: $(echo "$auth_response" | head -c 150)..."
            return 0
        else
            echo -e "${RED}‚ùå${NC}"
        fi
    done

    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:"
    local login_page=$(safe_curl "http://$MODEM_IP/login")
    if [ -n "$login_page" ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞: /login"
    fi

    local admin_page=$(safe_curl "http://$MODEM_IP/admin")
    if [ -n "$admin_page" ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∞–¥–º–∏–Ω —Å—Ç—Ä–∞–Ω–∏—Ü–∞: /admin"
    fi
    echo ""
}

# –ê–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
analyze_network() {
    echo -e "${BLUE}5. –ê–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π${NC}"
    echo "================================================"

    echo "üåê –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"

    if [ -n "$INTERFACE" ]; then
        echo "  –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $INTERFACE"
        echo "  IP –∞–¥—Ä–µ—Å: $(ip addr show $INTERFACE 2>/dev/null | grep 'inet ' | awk '{print $2}' | cut -d/ -f1)"

        echo -n "  –¢–µ—Å—Ç HTTP —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å... "
        local external_test=$(timeout 10 curl --interface "$INTERFACE" -s http://httpbin.org/ip 2>/dev/null)

        if [ -n "$external_test" ]; then
            local external_ip=$(echo "$external_test" | grep -o '"origin": "[^"]*"' | cut -d'"' -f4)
            echo -e "${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
            echo "  –í–Ω–µ—à–Ω–∏–π IP: $external_ip"
        else
            echo -e "${RED}‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω${NC}"
    fi

    echo ""
    echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏:"
    echo "  –ú–∞—Ä—à—Ä—É—Ç—ã —á–µ—Ä–µ–∑ –º–æ–¥–µ–º:"
    ip route show | grep "192.168.107" | head -3
    echo ""
}

# –ü–æ–ø—ã—Ç–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ø—Ä–æ—à–∏–≤–∫–∏
detect_firmware_type() {
    echo -e "${BLUE}6. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø—Ä–æ—à–∏–≤–∫–∏${NC}"
    echo "================================================"

    local homepage=$(safe_curl "http://$MODEM_IP")
    local api_response=$(safe_curl "http://$MODEM_IP/api")
    local status_response=$(safe_curl "http://$MODEM_IP/status")
    local info_response=$(safe_curl "http://$MODEM_IP/info")

    echo "üîç –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø—Ä–æ—à–∏–≤–∫–∏:"

    # OpenWrt/LEDE
    if echo "$homepage" | grep -qi "openwrt\|lede\|luci"; then
        echo -e "  üéØ ${GREEN}OpenWrt/LEDE –æ–±–Ω–∞—Ä—É–∂–µ–Ω${NC}"
        echo "    –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: LuCI"
        echo "    –ü—É—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: /cgi-bin/luci"
    fi

    # RouterOS
    if echo "$homepage" | grep -qi "mikrotik\|routeros"; then
        echo -e "  üéØ ${GREEN}MikroTik RouterOS –æ–±–Ω–∞—Ä—É–∂–µ–Ω${NC}"
    fi

    # DD-WRT
    if echo "$homepage" | grep -qi "dd-wrt"; then
        echo -e "  üéØ ${GREEN}DD-WRT –æ–±–Ω–∞—Ä—É–∂–µ–Ω${NC}"
    fi

    # –ö–∞—Å—Ç–æ–º–Ω–∞—è –Ω–∞ –±–∞–∑–µ PHP/HTML
    if echo "$homepage" | grep -qi "php\|<\?php"; then
        echo -e "  üéØ ${GREEN}PHP-based –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å${NC}"
    fi

    # JSON API
    if echo "$api_response$status_response$info_response" | grep -qi '^\s*{.*}'; then
        echo -e "  üéØ ${GREEN}JSON API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        echo "    –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç–∏: /api, /status, /info"
    fi

    # RESTful API
    if safe_curl "http://$MODEM_IP/api/v1" | grep -qi "json\|api"; then
        echo -e "  üéØ ${GREEN}RESTful API v1 –Ω–∞–π–¥–µ–Ω${NC}"
    fi

    echo ""
    echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:"

    if echo "$homepage$api_response" | grep -qi "json"; then
        echo "  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSON API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"
        echo "  üìñ –ò–∑—É—á–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–æ–≤ /api, /status, /info"
    fi

    if echo "$homepage" | grep -qi "luci"; then
        echo "  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ LuCI RPC –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
        echo "  üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: /cgi-bin/luci/rpc/uci"
    fi

    echo "  üîß –î–ª—è —Ä–æ—Ç–∞—Ü–∏–∏ IP –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "    - /api/network/restart"
    echo "    - /api/modem/restart"
    echo "    - /cgi-bin/luci/rpc/sys?method=reboot"
    echo "    - AT –∫–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ telnet/ssh"
    echo ""
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Ä–æ—Ç–∞—Ü–∏–∏
test_rotation_capabilities() {
    echo -e "${BLUE}7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Ä–æ—Ç–∞—Ü–∏–∏ IP${NC}"
    echo "================================================"

    # –í–æ–∑–º–æ–∂–Ω—ã–µ endpoints –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏
    local rotation_paths=(
        "/api/device/control"
        "/api/device/reboot"
        "/api/network/restart"
        "/api/modem/restart"
        "/restart"
        "/reboot"
        "/api/system/reboot"
        "/cgi-bin/luci/rpc/sys?method=reboot"
    )

    echo "üîÑ –ü–æ–∏—Å–∫ endpoints –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏ IP:"

    for path in "${rotation_paths[@]}"; do
        local response=$(safe_curl "http://$MODEM_IP$path" "-X POST")
        if [ -n "$response" ] && ! echo "$response" | grep -qi "not found\|404\|error\|forbidden"; then
            echo -e "  ‚úÖ ${GREEN}$path${NC} - –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è POST"
            echo "     $(echo "$response" | head -c 100 | tr '\n' ' ')..."
        fi
    done

    echo ""
    echo "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ SSH/Telnet:"

    echo -n "  SSH (–ø–æ—Ä—Ç 22)... "
    if timeout 3 nc -z "$MODEM_IP" 22 2>/dev/null; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
        echo "    –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: ssh root@$MODEM_IP"
    else
        echo -e "${RED}‚ùå –ó–∞–∫—Ä—ã—Ç${NC}"
    fi

    echo -n "  Telnet (–ø–æ—Ä—Ç 23)... "
    if timeout 3 nc -z "$MODEM_IP" 23 2>/dev/null; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
        echo "    –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: telnet $MODEM_IP"
    else
        echo -e "${RED}‚ùå –ó–∞–∫—Ä—ã—Ç${NC}"
    fi

    echo -n "  HTTP –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π (–ø–æ—Ä—Ç 8080)... "
    if timeout 3 nc -z "$MODEM_IP" 8080 2>/dev/null; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –ó–∞–∫—Ä—ã—Ç${NC}"
    fi
    echo ""
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
create_integration_profile() {
    echo -e "${BLUE}8. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏${NC}"
    echo "================================================"

    echo "üìù –°–æ–∑–¥–∞—é —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏..."

    cat > "modem_${MODEM_IP//\./_}_profile.json" << EOF
{
  "modem_info": {
    "ip": "$MODEM_IP",
    "interface": "$INTERFACE",
    "detected_firmware": "custom",
    "scan_date": "$(date -Iseconds)"
  },
  "working_endpoints": [
EOF

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—á–∏–µ endpoints
    local endpoints_found=false
    local test_paths=("/api/device/information" "/api" "/status" "/info" "/cgi-bin/luci")

    for path in "${test_paths[@]}"; do
        local response=$(safe_curl "http://$MODEM_IP$path")
        if [ -n "$response" ] && ! echo "$response" | grep -qi "not found\|404\|error"; then
            if [ "$endpoints_found" = true ]; then
                echo "," >> "modem_${MODEM_IP//\./_}_profile.json"
            fi
            echo "    {\"path\": \"$path\", \"working\": true}" >> "modem_${MODEM_IP//\./_}_profile.json"
            endpoints_found=true
        fi
    done

    cat >> "modem_${MODEM_IP//\./_}_profile.json" << EOF
  ],
  "integration_recommendations": {
    "api_type": "custom",
    "auth_required": false,
    "rotation_method": "unknown",
    "monitoring_endpoint": "/status"
  }
}
EOF

    echo "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: modem_${MODEM_IP//\./_}_profile.json"
    echo ""
    echo "üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:"
    echo "1. –ò–∑—É—á–∏—Ç–µ —Ä–∞–±–æ—á–∏–µ endpoints –≤ –ø—Ä–æ—Ñ–∏–ª–µ"
    echo "2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–≥–Ω–∞–ª–∞"
    echo "3. –ù–∞–π–¥–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ä–æ—Ç–∞—Ü–∏–∏ IP (API/SSH/AT-–∫–æ–º–∞–Ω–¥—ã)"
    echo "4. –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –≤–∞—à —Å–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø–æ–¥ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ endpoints"
    echo ""
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –º–æ–¥–µ–º–∞ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –ø—Ä–æ—à–∏–≤–∫–æ–π..."
    echo ""

    check_connectivity
    analyze_homepage
    scan_endpoints
    try_authentication
    analyze_network
    detect_firmware_type
    test_rotation_capabilities
    create_integration_profile

    echo -e "${GREEN}üèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo ""
    echo "üìã –°–≤–æ–¥–∫–∞:"
    echo "  - IP –º–æ–¥–µ–º–∞: $MODEM_IP"
    echo "  - –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $INTERFACE"
    echo "  - –ü—Ä–æ—Ñ–∏–ª—å: modem_${MODEM_IP//\./_}_profile.json"
    echo ""
    echo "üí° –î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ endpoints"
    echo "   –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –∫–æ–¥ –≤ backend/app/core/device_manager.py"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if ! command -v curl &> /dev/null; then
    echo -e "${RED}‚ùå curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install curl${NC}"
    exit 1
fi

if ! command -v nc &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è netcat –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install netcat${NC}"
fi

# –ó–∞–ø—É—Å–∫
main "$@"
