#!/bin/bash
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–±–∏–ª—å–Ω—ã—Ö –º–æ–¥–µ–º–æ–≤
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
NC='\033[0m'

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
declare -A MODEM_INTERFACES
declare -A MODEM_IPS
declare -A MODEM_GATEWAYS
declare -A MODEM_NETWORKS
declare -A MODEM_TYPES
declare -A MODEM_MODELS
declare -A MODEM_MACS
declare -a AVAILABLE_INTERFACES
declare -a E3372_INTERFACES

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö MAC –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π
declare -A VENDOR_OUIS=(
    ["0c:5b:8f"]="huawei"
    ["e8:de:27"]="huawei"
    ["00:1e:10"]="huawei"
    ["ac:85:3d"]="huawei"
    ["48:7b:6b"]="huawei"
    ["00:19:cb"]="zte"
    ["68:db:54"]="zte"
    ["24:09:95"]="zte"
    ["2c:6e:85"]="quectel"
    ["00:9d:6b"]="quectel"
    ["1c:99:57"]="sierra"
)

# –ú–æ–¥–µ–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º
declare -A DEVICE_MODELS=(
    ["huawei"]="E3372h|E3372s|E5770|E8372|E5573"
    ["zte"]="MF79U|MF833|MF910"
    ["quectel"]="EC25|UC20|EC21"
    ["sierra"]="MC7455|EM7455"
)

echo -e "${BLUE}üîß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ–º–æ–≤${NC}"
echo "========================================================"
echo ""

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è MAC –∞–¥—Ä–µ—Å–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
get_interface_mac() {
    local interface="$1"
    local mac=$(ip link show "$interface" | grep -o "link/ether [0-9a-f:]*" | awk '{print $2}')
    echo "$mac"
}

# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –ø–æ MAC
identify_vendor_by_mac() {
    local mac="$1"
    local oui=$(echo "$mac" | cut -d: -f1-3)

    for vendor_oui in "${!VENDOR_OUIS[@]}"; do
        if [ "$oui" = "$vendor_oui" ]; then
            echo "${VENDOR_OUIS[$vendor_oui]}"
            return 0
        fi
    done

    echo "unknown"
}

# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
identify_device_model() {
    local interface="$1"
    local vendor="$2"
    local gateway_ip="$3"

    # –ü–æ–ø—ã—Ç–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if [ "$vendor" = "huawei" ]; then
        local device_info=$(timeout 5 curl -s "http://$gateway_ip/api/device/information" 2>/dev/null)
        if [ -n "$device_info" ]; then
            local model=$(echo "$device_info" | grep -o '<DeviceName>[^<]*</DeviceName>' | sed 's/<[^>]*>//g')
            if [ -n "$model" ]; then
                echo "$model"
                return 0
            fi
        fi

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–¥—Å–µ—Ç–∏ –¥–ª—è Huawei
        case "$gateway_ip" in
            "192.168.8.1") echo "E3372h" ;;
            "192.168.107.1"|"192.168.108.1") echo "E3372h" ;;
            "192.168.1.1") echo "E5770" ;;
            *) echo "E3372h" ;;  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è Huawei
        esac
    elif [ "$vendor" = "zte" ]; then
        echo "MF79U"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è ZTE
    elif [ "$vendor" = "quectel" ]; then
        echo "EC25"   # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è Quectel
    else
        echo "Unknown"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö USB —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
detect_usb_interfaces() {
    echo -e "${CYAN}1. üîç –ü–æ–∏—Å–∫ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è USB —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤...${NC}"
    echo "================================================================"

    AVAILABLE_INTERFACES=()
    E3372_INTERFACES=()

    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö USB –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ (enx*, usb*, wwan*)
    for interface in $(ip link show | grep -E "enx[0-9a-f]+|usb[0-9]+|wwan[0-9]+" | cut -d: -f2 | tr -d ' '); do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω –∏–ª–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
        state=$(ip link show "$interface" | grep -o "state [A-Z]*" | cut -d' ' -f2)

        # –ü–æ–ª—É—á–∞–µ–º MAC –∞–¥—Ä–µ—Å
        mac=$(get_interface_mac "$interface")
        MODEM_MACS["$interface"]="$mac"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è
        vendor=$(identify_vendor_by_mac "$mac")
        MODEM_TYPES["$interface"]="$vendor"

        echo -n "  üì° $interface (MAC: $mac, $vendor, —Å–æ—Å—Ç–æ—è–Ω–∏–µ: $state)... "

        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–Ω—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –æ–Ω DOWN
        if [ "$state" = "DOWN" ]; then
            sudo ip link set "$interface" up >/dev/null 2>&1
            sleep 1
            state=$(ip link show "$interface" | grep -o "state [A-Z]*" | cut -d' ' -f2)
        fi

        if [ "$state" = "UP" ] || [ "$state" = "UNKNOWN" ]; then
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π IP
            current_ip=$(ip addr show "$interface" | grep 'inet ' | awk '{print $2}' | cut -d/ -f1 | head -1)

            if [ -n "$current_ip" ]; then
                AVAILABLE_INTERFACES+=("$interface")
                MODEM_IPS["$interface"]="$current_ip"

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Ç—å –∏ –≤–æ–∑–º–æ–∂–Ω—ã–π —à–ª—é–∑
                network=$(ip route show dev "$interface" | grep "proto kernel" | awk '{print $1}' | head -1)
                if [ -n "$network" ]; then
                    MODEM_NETWORKS["$interface"]="$network"
                    # –í—ã—á–∏—Å–ª—è–µ–º IP —à–ª—é–∑–∞ (–æ–±—ã—á–Ω–æ .1 –≤ —Å–µ—Ç–∏)
                    gateway=$(echo "$network" | sed 's/0\/24/1/' | sed 's/\.0\//\.1\//' | cut -d/ -f1)
                    MODEM_GATEWAYS["$interface"]="$gateway"

                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–¥–µ–ª—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
                    model=$(identify_device_model "$interface" "$vendor" "$gateway")
                    MODEM_MODELS["$interface"]="$model"

                    echo -e "${GREEN}‚úÖ IP: $current_ip ($model)${NC}"

                    # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ E3372 –µ—Å–ª–∏ —ç—Ç–æ –æ–Ω
                    if [ "$vendor" = "huawei" ] && [[ "$model" =~ E3372 ]]; then
                        E3372_INTERFACES+=("$interface")
                    fi
                else
                    echo -e "${GREEN}‚úÖ IP: $current_ip${NC}"
                fi
            else
                echo -e "${YELLOW}‚ö†Ô∏è –ù–µ—Ç IP${NC}"
                AVAILABLE_INTERFACES+=("$interface")
                MODEM_IPS["$interface"]="no_ip"
            fi
        else
            echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        fi
    done

    echo ""

    if [ ${#AVAILABLE_INTERFACES[@]} -eq 0 ]; then
        echo -e "${RED}‚ùå USB —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
        echo ""
        echo "üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"
        echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ USB –º–æ–¥–µ–º—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã"
        echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –º–æ–¥–µ–º—ã –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω—ã –≤ —Ä–µ–∂–∏–º –º–æ–¥–µ–º–∞ (–Ω–µ mass storage)"
        echo "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: sudo ./setup_e3372.sh"
        exit 1
    fi

    echo -e "${GREEN}‚úÖ –ù–∞–π–¥–µ–Ω–æ USB –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤: ${#AVAILABLE_INTERFACES[@]}${NC}"
    if [ ${#E3372_INTERFACES[@]} -gt 0 ]; then
        echo -e "${CYAN}üì± –ò–∑ –Ω–∏—Ö Huawei E3372: ${#E3372_INTERFACES[@]}${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–º–∞ –ø–æ IP
check_modem_web_interface() {
    local gateway_ip="$1"
    local interface="$2"

    echo -n "    üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å $gateway_ip... "

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∏–Ω–≥
    if ! timeout 3 ping -c 1 -W 1 "$gateway_ip" >/dev/null 2>&1; then
        echo -e "${RED}‚ùå –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–∏–Ω–≥${NC}"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP
    web_response=$(timeout 5 curl -s "http://$gateway_ip" 2>/dev/null)
    if [ -n "$web_response" ]; then
        # –ò—â–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ Huawei –º–æ–¥–µ–º–∞
        if echo "$web_response" | grep -qi "huawei\|hilink\|mobile.*wifi\|lte\|4g"; then
            echo -e "${GREEN}‚úÖ Huawei –º–æ–¥–µ–º${NC}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
            echo -n "    üì° API... "
            api_response=$(timeout 5 curl -s "http://$gateway_ip/api/webserver/SesTokInfo" 2>/dev/null)
            if [ -n "$api_response" ] && echo "$api_response" | grep -q "SesInfo"; then
                echo -e "${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
            else
                echo -e "${YELLOW}‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
            fi
            return 0
        else
            echo -e "${YELLOW}‚ö†Ô∏è –ù–µ Huawei${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå HTTP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è IP —á–µ—Ä–µ–∑ DHCP
get_ip_via_dhcp() {
    local interface="$1"

    echo "    üåê –ü–æ–ª—É—á–µ–Ω–∏–µ IP —á–µ—Ä–µ–∑ DHCP..."

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã dhclient
    sudo pkill -f "dhclient.*$interface" 2>/dev/null || true

    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ IP
    sudo ip addr flush dev "$interface" 2>/dev/null || true

    # –ü–æ–¥–Ω–∏–º–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    sudo ip link set "$interface" up
    sleep 2

    # –ó–∞–ø—É—Å–∫–∞–µ–º dhclient —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    echo "    ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ DHCP –æ—Ç–≤–µ—Ç–∞ (15 —Å–µ–∫—É–Ω–¥)..."
    timeout 15 sudo dhclient -v "$interface" >/dev/null 2>&1 &
    local dhcp_pid=$!

    # –ñ–¥–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è IP
    for i in {1..15}; do
        if ip addr show "$interface" | grep -q "inet "; then
            local new_ip=$(ip addr show "$interface" | grep "inet " | awk '{print $2}' | cut -d/ -f1 | head -1)
            echo -e "    ${GREEN}‚úÖ IP –ø–æ–ª—É—á–µ–Ω: $new_ip${NC}"
            MODEM_IPS["$interface"]="$new_ip"

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Ç—å –∏ —à–ª—é–∑
            local network=$(ip route show dev "$interface" | grep "proto kernel" | awk '{print $1}' | head -1)
            if [ -n "$network" ]; then
                MODEM_NETWORKS["$interface"]="$network"
                local gateway=$(echo "$network" | sed 's/0\/24/1/' | sed 's/\.0\//\.1\//' | cut -d/ -f1)
                MODEM_GATEWAYS["$interface"]="$gateway"
            fi

            kill $dhcp_pid 2>/dev/null || true
            return 0
        fi
        sleep 1
    done

    kill $dhcp_pid 2>/dev/null || true
    echo -e "    ${RED}‚ùå IP –Ω–µ –ø–æ–ª—É—á–µ–Ω${NC}"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
analyze_interface() {
    local interface="$1"

    echo ""
    echo -e "${CYAN}üîç –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: $interface${NC}"
    echo "========================================"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    local state=$(ip link show "$interface" | grep -o "state [A-Z]*" | cut -d' ' -f2)
    echo "  üì° –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: $state"

    # –ü–æ–¥–Ω–∏–º–∞–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if [ "$state" = "DOWN" ]; then
        echo "  üîß –ü–æ–¥–Ω–∏–º–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å..."
        sudo ip link set "$interface" up
        sleep 2
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º IP
    local current_ip="${MODEM_IPS[$interface]}"
    if [ "$current_ip" = "no_ip" ] || [ -z "$current_ip" ]; then
        echo "  ‚ö†Ô∏è IP –∞–¥—Ä–µ—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è..."
        if get_ip_via_dhcp "$interface"; then
            current_ip="${MODEM_IPS[$interface]}"
        else
            echo -e "  ${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP –∞–¥—Ä–µ—Å${NC}"
            return 1
        fi
    else
        echo -e "  ${GREEN}‚úÖ IP –∞–¥—Ä–µ—Å: $current_ip${NC}"
    fi

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —à–ª—é–∑ –º–æ–¥–µ–º–∞
    local gateway="${MODEM_GATEWAYS[$interface]}"
    local network="${MODEM_NETWORKS[$interface]}"

    echo "  üåê –°–µ—Ç—å: $network"
    echo "  üö™ –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π —à–ª—é–∑: $gateway"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–º
    if check_modem_web_interface "$gateway" "$interface"; then
        MODEM_INTERFACES["$interface"]="verified"
    else
        MODEM_INTERFACES["$interface"]="unverified"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é
    echo "  üìç –¢–µ–∫—É—â–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã:"
    local routes=$(ip route show dev "$interface")
    if [ -n "$routes" ]; then
        echo "$routes" | sed 's/^/    /'
    else
        echo "    –ù–µ—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–ª—é–∑ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    local default_gw=$(ip route show default | grep "$interface" | awk '{print $3}' | head -1)
    if [ -n "$default_gw" ]; then
        echo -e "  ${GREEN}‚úÖ –®–ª—é–∑ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $default_gw${NC}"
    else
        echo -e "  ${YELLOW}‚ö†Ô∏è –®–ª—é–∑ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi

    return 0
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
setup_routing() {
    local interface="$1"
    local current_ip="${MODEM_IPS[$interface]}"
    local gateway="${MODEM_GATEWAYS[$interface]}"
    local network="${MODEM_NETWORKS[$interface]}"

    echo ""
    echo -e "${PURPLE}üõ£Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è $interface${NC}"
    echo "=================================================="

    echo "  üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "    –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $interface"
    echo "    IP: $current_ip"
    echo "    –°–µ—Ç—å: $network"
    echo "    –®–ª—é–∑: $gateway"
    echo ""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —à–ª—é–∑–∞
    echo -n "  üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —à–ª—é–∑–∞... "
    if timeout 3 ping -c 1 -W 1 "$gateway" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        echo "  ‚ö†Ô∏è –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å"
    fi

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —ç—Ç–æ–π —Å–µ—Ç–∏
    echo "  üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤..."
    sudo ip route del "$network" dev "$interface" 2>/dev/null || true
    sudo ip route del default via "$gateway" dev "$interface" 2>/dev/null || true

    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –∫ —Å–µ—Ç–∏
    echo "  ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –∫ —Å–µ—Ç–∏..."
    if sudo ip route add "$network" dev "$interface" 2>/dev/null; then
        echo -e "    ${GREEN}‚úÖ –ú–∞—Ä—à—Ä—É—Ç –∫ —Å–µ—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω${NC}"
    else
        echo -e "    ${YELLOW}‚ö†Ô∏è –ú–∞—Ä—à—Ä—É—Ç –∫ —Å–µ—Ç–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    fi

    # –î–æ–±–∞–≤–ª—è–µ–º —à–ª—é–∑ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å –º–µ—Ç—Ä–∏–∫–æ–π
    echo "  ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —à–ª—é–∑–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
    local metric=600
    case "$interface" in
        *enx*) metric=600 ;;
        *usb*) metric=700 ;;
        *wwan*) metric=800 ;;
    esac

    if sudo ip route add default via "$gateway" dev "$interface" metric $metric 2>/dev/null; then
        echo -e "    ${GREEN}‚úÖ –®–ª—é–∑ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ–±–∞–≤–ª–µ–Ω (–º–µ—Ç—Ä–∏–∫–∞: $metric)${NC}"
    else
        echo -e "    ${YELLOW}‚ö†Ô∏è –®–ª—é–∑ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo "  üìã –ò—Ç–æ–≥–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:"
    ip route show dev "$interface" | sed 's/^/    /'

    return 0
}

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
test_internet() {
    local interface="$1"

    echo ""
    echo -e "${CYAN}üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ —á–µ—Ä–µ–∑ $interface${NC}"
    echo "================================================="

    # –¢–µ—Å—Ç 1: –ü–∏–Ω–≥ DNS
    echo -n "  üì° Ping Google DNS (8.8.8.8)... "
    if timeout 5 ping -I "$interface" -c 1 -W 2 8.8.8.8 >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    fi

    # –¢–µ—Å—Ç 2: DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
    echo -n "  üîç DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ... "
    if timeout 5 nslookup google.com >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    fi

    # –¢–µ—Å—Ç 3: HTTP –∑–∞–ø—Ä–æ—Å
    echo -n "  üåê HTTP –∑–∞–ø—Ä–æ—Å (–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP)... "
    local http_result=$(timeout 10 curl --interface "$interface" -s http://httpbin.org/ip 2>/dev/null)
    if [ -n "$http_result" ] && echo "$http_result" | grep -q "origin"; then
        local external_ip=$(echo "$http_result" | grep -o '"origin": "[^"]*"' | cut -d'"' -f4)
        echo -e "${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
        echo -e "    ${CYAN}üåç –í–Ω–µ—à–Ω–∏–π IP: $external_ip${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
save_config() {
    local interface="$1"
    local current_ip="${MODEM_IPS[$interface]}"
    local gateway="${MODEM_GATEWAYS[$interface]}"
    local network="${MODEM_NETWORKS[$interface]}"
    local vendor="${MODEM_TYPES[$interface]}"
    local model="${MODEM_MODELS[$interface]}"
    local mac="${MODEM_MACS[$interface]}"

    local config_file="${interface}_${vendor}_${model}_config.json"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ IP
    local external_ip="unknown"
    local internet_working="false"
    local http_result=$(timeout 10 curl --interface "$interface" -s http://httpbin.org/ip 2>/dev/null)
    if [ -n "$http_result" ] && echo "$http_result" | grep -q "origin"; then
        external_ip=$(echo "$http_result" | grep -o '"origin": "[^"]*"' | cut -d'"' -f4)
        internet_working="true"
    fi

    cat > "$config_file" << EOF
{
  "device_type": "$vendor",
  "device_model": "$model",
  "interface": "$interface",
  "mac_address": "$mac",
  "connection": {
    "local_ip": "$current_ip",
    "gateway_ip": "$gateway",
    "network": "$network"
  },
  "status": {
    "interface_up": true,
    "ip_assigned": true,
    "gateway_accessible": true,
    "internet_working": $internet_working
  },
  "external_ip": "$external_ip",
  "vendor_info": {
    "manufacturer": "$vendor",
    "model": "$model",
    "mac_oui": "$(echo "$mac" | cut -d: -f1-3)"
  },
  "api_endpoints": {
    "base_url": "http://$gateway"
  },
  "integration": {
    "detection_method": "mac_address_oui",
    "monitoring_interval": 60,
    "priority": "normal"
  },
  "routing": {
    "metric": 600,
    "auto_default_route": true,
    "table_id": "main"
  }
}
EOF

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if [ "$vendor" = "huawei" ]; then
        # –î–æ–ø–æ–ª–Ω—è–µ–º JSON –¥–ª—è Huawei —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        local temp_file=$(mktemp)
        jq '. + {
            "api_endpoints": {
                "base_url": "http://'$gateway'",
                "session_token": "/api/webserver/SesTokInfo",
                "device_info": "/api/device/information",
                "signal_status": "/api/device/signal"
            },
            "integration": {
                "detection_method": "mac_address_oui",
                "monitoring_interval": 60,
                "rotation_method": "api_calls"
            }
        }' "$config_file" > "$temp_file" && mv "$temp_file" "$config_file"
    fi

    echo -e "  ${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $config_file${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞
show_interface_dialog() {
    echo ""
    echo -e "${BLUE}üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:${NC}"
    echo "======================================="
    echo ""

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–∏–ø–∞–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    local huawei_count=$(echo "${MODEM_TYPES[@]}" | tr ' ' '\n' | grep -c "huawei" || echo "0")
    local zte_count=$(echo "${MODEM_TYPES[@]}" | tr ' ' '\n' | grep -c "zte" || echo "0")
    local quectel_count=$(echo "${MODEM_TYPES[@]}" | tr ' ' '\n' | grep -c "quectel" || echo "0")
    local unknown_count=$(echo "${MODEM_TYPES[@]}" | tr ' ' '\n' | grep -c "unknown" || echo "0")

    if [ ${#E3372_INTERFACES[@]} -gt 0 ]; then
        echo -e "  ${CYAN}üéØ E) ${GREEN}–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ Huawei E3372 (${#E3372_INTERFACES[@]} —à—Ç.)${NC}"
    fi

    if [ $huawei_count -gt 0 ]; then
        echo -e "  ${CYAN}üéØ H) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ Huawei —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ($huawei_count —à—Ç.)${NC}"
    fi

    if [ $zte_count -gt 0 ]; then
        echo -e "  ${CYAN}üéØ Z) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ ZTE —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ($zte_count —à—Ç.)${NC}"
    fi

    echo -e "  ${CYAN}üîß 0) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –í–°–ï –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã${NC}"
    echo ""
    echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:${NC}"

    local i=1
    for interface in "${AVAILABLE_INTERFACES[@]}"; do
        local ip="${MODEM_IPS[$interface]}"
        local vendor="${MODEM_TYPES[$interface]}"
        local model="${MODEM_MODELS[$interface]}"
        local mac="${MODEM_MACS[$interface]}"
        local status=""

        if [ "$ip" != "no_ip" ] && [ -n "$ip" ]; then
            if [ "${MODEM_INTERFACES[$interface]}" = "verified" ]; then
                status="${GREEN}‚úÖ –ì–æ—Ç–æ–≤${NC}"
            else
                status="${YELLOW}‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏${NC}"
            fi
            local info="IP: $ip"
        else
            status="${RED}‚ùå –ù–µ—Ç IP –∞–¥—Ä–µ—Å–∞${NC}"
            local info="–ù–µ—Ç IP"
        fi

        if [ "$vendor" != "unknown" ]; then
            echo -e "  $i) $interface - ${CYAN}$vendor $model${NC} ($info) - $status"
        else
            echo -e "  $i) $interface - ${PURPLE}Unknown${NC} ($info) - $status"
        fi

        echo "     ${PURPLE}MAC: $mac${NC}"
        i=$((i + 1))
    done

    echo ""
    echo -e "  q) ${RED}‚ùå –í—ã—Ö–æ–¥${NC}"
    echo ""

    while true; do
        read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice

        case "$choice" in
            E|e)
                if [ ${#E3372_INTERFACES[@]} -gt 0 ]; then
                    return 100  # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è E3372
                else
                    echo -e "${RED}‚ùå Huawei E3372 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
                fi
                ;;
            H|h)
                if [ $huawei_count -gt 0 ]; then
                    return 101  # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤—Å–µ—Ö Huawei
                else
                    echo -e "${RED}‚ùå Huawei —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
                fi
                ;;
            Z|z)
                if [ $zte_count -gt 0 ]; then
                    return 102  # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤—Å–µ—Ö ZTE
                else
                    echo -e "${RED}‚ùå ZTE —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
                fi
                ;;
            0)
                return 0  # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ
                ;;
            q|Q)
                echo "–í—ã—Ö–æ–¥..."
                exit 0
                ;;
            [1-9]*)
                if [ "$choice" -le "${#AVAILABLE_INTERFACES[@]}" ] && [ "$choice" -gt 0 ]; then
                    return $choice  # –ù–æ–º–µ—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                else
                    echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
                fi
                ;;
            *)
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ E/H/Z/0-${#AVAILABLE_INTERFACES[@]} –∏–ª–∏ 'q'.${NC}"
                ;;
        esac
    done
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–¥–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
configure_interface() {
    local interface="$1"

    echo ""
    echo -e "${PURPLE}‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –ò–ù–¢–ï–†–§–ï–ô–°–ê: $interface${NC}"
    echo "======================================================="

    # –ê–Ω–∞–ª–∏–∑
    if ! analyze_interface "$interface"; then
        echo -e "${RED}‚ùå –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ $interface –Ω–µ —É–¥–∞–ª—Å—è${NC}"
        return 1
    fi

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
    setup_routing "$interface"

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if test_internet "$interface"; then
        echo -e "${GREEN}‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å $interface —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        save_config "$interface"
        return 0
    else
        echo -e "${RED}‚ùå –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å $interface –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        save_config "$interface"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ —Ç–∏–ø—É
configure_by_type() {
    local device_type="$1"
    local interfaces_to_configure=()

    case "$device_type" in
        "e3372")
            interfaces_to_configure=("${E3372_INTERFACES[@]}")
            echo -e "${PURPLE}‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –í–°–ï–• HUAWEI E3372 –£–°–¢–†–û–ô–°–¢–í${NC}"
            ;;
        "huawei")
            for interface in "${AVAILABLE_INTERFACES[@]}"; do
                if [ "${MODEM_TYPES[$interface]}" = "huawei" ]; then
                    interfaces_to_configure+=("$interface")
                fi
            done
            echo -e "${PURPLE}‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –í–°–ï–• HUAWEI –£–°–¢–†–û–ô–°–¢–í${NC}"
            ;;
        "zte")
            for interface in "${AVAILABLE_INTERFACES[@]}"; do
                if [ "${MODEM_TYPES[$interface]}" = "zte" ]; then
                    interfaces_to_configure+=("$interface")
                fi
            done
            echo -e "${PURPLE}‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –í–°–ï–• ZTE –£–°–¢–†–û–ô–°–¢–í${NC}"
            ;;
    esac

    echo "======================================================="
    echo -e "${CYAN}–ë—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: ${#interfaces_to_configure[@]}${NC}"

    for interface in "${interfaces_to_configure[@]}"; do
        local vendor="${MODEM_TYPES[$interface]}"
        local model="${MODEM_MODELS[$interface]}"
        local mac="${MODEM_MACS[$interface]}"
        echo "  üì± $interface - $vendor $model (MAC: $mac)"
    done

    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " confirm
    if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
        echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
        return 1
    fi

    local success_count=0
    local total_count=${#interfaces_to_configure[@]}

    for interface in "${interfaces_to_configure[@]}"; do
        if configure_interface "$interface"; then
            success_count=$((success_count + 1))
        fi
        echo ""
    done

    echo -e "${BLUE}üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ù–ê–°–¢–†–û–ô–ö–ò $device_type:${NC}"
    echo "================================="
    echo -e "  –í—Å–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: $total_count"
    echo -e "  ${GREEN}–£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ: $success_count${NC}"
    echo -e "  ${RED}–° –æ—à–∏–±–∫–∞–º–∏: $((total_count - success_count))${NC}"

    if [ $success_count -eq $total_count ]; then
        echo -e "  ${GREEN}üéâ –í–°–ï –£–°–¢–†–û–ô–°–¢–í–ê –†–ê–ë–û–¢–ê–Æ–¢!${NC}"
    elif [ $success_count -gt 0 ]; then
        echo -e "  ${YELLOW}‚ö†Ô∏è –ß–∞—Å—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "  ${RED}‚ùå –ù–ò –û–î–ù–û –£–°–¢–†–û–ô–°–¢–í–û –ù–ï –†–ê–ë–û–¢–ê–ï–¢${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if [ "$EUID" -eq 0 ]; then
        echo -e "${RED}‚ùå –ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ sudo —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.${NC}"
        exit 1
    fi

    # –ü–æ–∏—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
    detect_usb_interfaces

    # –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
    echo ""
    echo -e "${CYAN}2. üîç –ê–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤...${NC}"
    echo "============================================"

    for interface in "${AVAILABLE_INTERFACES[@]}"; do
        analyze_interface "$interface" >/dev/null 2>&1
    done

    # –î–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞
    show_interface_dialog
    local choice=$?

    if [ $choice -eq 0 ]; then
        # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        configure_all_interfaces
    elif [ $choice -eq 100 ]; then
        # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ E3372
        configure_by_type "e3372"
    elif [ $choice -eq 101 ]; then
        # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ Huawei
        configure_by_type "huawei"
    elif [ $choice -eq 102 ]; then
        # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ ZTE
        configure_by_type "zte"
    else
        # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        local selected_interface="${AVAILABLE_INTERFACES[$((choice - 1))]}"
        configure_interface "$selected_interface"
    fi

    echo ""
    echo -e "${BLUE}üèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo "============================================"
    echo ""
    echo -e "${CYAN}üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:${NC}"
    echo "  ip route show                    # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã"
    echo "  ip addr show                     # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ IP –∞–¥—Ä–µ—Å–∞"
    echo "  curl --interface <–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å> http://httpbin.org/ip  # –¢–µ—Å—Ç —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    echo ""
# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
configure_all_interfaces() {
    echo ""
    echo -e "${PURPLE}‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –í–°–ï–• –ò–ù–¢–ï–†–§–ï–ô–°–û–í${NC}"
    echo "======================================="

    local success_count=0
    local total_count=${#AVAILABLE_INTERFACES[@]}

    for interface in "${AVAILABLE_INTERFACES[@]}"; do
        if configure_interface "$interface"; then
            success_count=$((success_count + 1))
        fi
        echo ""
    done

    echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:${NC}"
    echo "================================="
    echo -e "  –í—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤: $total_count"
    echo -e "  ${GREEN}–£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ: $success_count${NC}"
    echo -e "  ${RED}–° –æ—à–∏–±–∫–∞–º–∏: $((total_count - success_count))${NC}"

    if [ $success_count -eq $total_count ]; then
        echo -e "  ${GREEN}üéâ –í–°–ï –ò–ù–¢–ï–†–§–ï–ô–°–´ –†–ê–ë–û–¢–ê–Æ–¢!${NC}"
    elif [ $success_count -gt 0 ]; then
        echo -e "  ${YELLOW}‚ö†Ô∏è –ß–∞—Å—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "  ${RED}‚ùå –ù–ò –û–î–ò–ù –ò–ù–¢–ï–†–§–ï–ô–° –ù–ï –†–ê–ë–û–¢–ê–ï–¢${NC}"
    fi
}
}

# –ó–∞–ø—É—Å–∫
main "$@"

