#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤–Ω–µ—à–Ω–µ–≥–æ IP —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω–æ–π
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç IP –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —á–∞—Å–æ–≤

INTERFACE="enx0c5b8f279a64"
DURATION=10800  # 3 —á–∞—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
CHECK_INTERVAL=60  # 1 –º–∏–Ω—É—Ç–∞

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
declare -a IP_CHANGES
declare -a CHANGE_TIMES
CURRENT_IP=""
PREVIOUS_IP=""
START_TIME=$(date +%s)
LAST_CHECK_TIME=$START_TIME
CHECKS_COUNT=0
CHANGES_COUNT=0
STOPPED_BY_USER=false

# –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
RESULT_FILE="ip_monitoring_$(date +%Y%m%d_%H%M%S).log"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ IP
get_external_ip() {
    local ip=$(curl --interface "$INTERFACE" -s --connect-timeout 10 --max-time 15 2ip.ru 2>/dev/null)
    # –û—á–∏—â–∞–µ–º –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ IP
    echo "$ip" | grep -oE '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$' | head -1
}

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
handle_interrupt() {
    echo ""
    echo "‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–æ–≤–µ—Ä–∫–∏..."
    STOPPED_BY_USER=true

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å
    echo ""
    read -p "–•–æ—Ç–∏—Ç–µ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏? (y/n): " -n 1 -r
    echo

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üîÑ –í–æ–∑–æ–±–Ω–æ–≤–ª—è—é –ø—Ä–æ–≤–µ—Ä–∫–∏..."
        STOPPED_BY_USER=false
        return 0
    else
        echo "üõë –ó–∞–≤–µ—Ä—à–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥..."
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Ñ–∞–π–ª
write_statistics() {
    local end_time=$(date +%s)
    local total_duration=$((end_time - START_TIME))
    local hours=$((total_duration / 3600))
    local minutes=$(((total_duration % 3600) / 60))
    local seconds=$((total_duration % 60))

    echo "üìä IP MONITORING STATISTICS" > "$RESULT_FILE"
    echo "===========================" >> "$RESULT_FILE"
    echo "" >> "$RESULT_FILE"
    echo "üìÖ –ü–µ—Ä–∏–æ–¥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:" >> "$RESULT_FILE"
    echo "  –ù–∞—á–∞–ª–æ: $(date -d "@$START_TIME" "+%Y-%m-%d %H:%M:%S")" >> "$RESULT_FILE"
    echo "  –ö–æ–Ω–µ—Ü:  $(date -d "@$end_time" "+%Y-%m-%d %H:%M:%S")" >> "$RESULT_FILE"
    echo "  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${hours}—á ${minutes}–º ${seconds}—Å" >> "$RESULT_FILE"
    echo "" >> "$RESULT_FILE"

    echo "üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" >> "$RESULT_FILE"
    echo "  –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $CHECKS_COUNT" >> "$RESULT_FILE"
    echo "  –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–º–µ–Ω IP: $CHANGES_COUNT" >> "$RESULT_FILE"

    if [ $CHANGES_COUNT -gt 0 ]; then
        echo "  –ß–∞—Å—Ç–æ—Ç–∞ —Å–º–µ–Ω: $(echo "scale=2; $CHANGES_COUNT * 3600 / $total_duration" | bc -l) —Å–º–µ–Ω/—á–∞—Å" >> "$RESULT_FILE"
    else
        echo "  –ß–∞—Å—Ç–æ—Ç–∞ —Å–º–µ–Ω: 0 —Å–º–µ–Ω/—á–∞—Å" >> "$RESULT_FILE"
    fi

    echo "" >> "$RESULT_FILE"

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –º–µ–∂–¥—É —Å–º–µ–Ω–∞–º–∏
    if [ $CHANGES_COUNT -gt 1 ]; then
        echo "‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –º–µ–∂–¥—É —Å–º–µ–Ω–∞–º–∏ IP:" >> "$RESULT_FILE"
        local total_interval=0
        local min_interval=999999
        local max_interval=0

        for ((i=1; i<$CHANGES_COUNT; i++)); do
            local interval=$((CHANGE_TIMES[i] - CHANGE_TIMES[i-1]))
            local interval_min=$((interval / 60))
            local interval_sec=$((interval % 60))

            echo "  –°–º–µ–Ω–∞ $i: ${interval_min}–º ${interval_sec}—Å" >> "$RESULT_FILE"

            total_interval=$((total_interval + interval))
            if [ $interval -lt $min_interval ]; then
                min_interval=$interval
            fi
            if [ $interval -gt $max_interval ]; then
                max_interval=$interval
            fi
        done

        local avg_interval=$((total_interval / (CHANGES_COUNT - 1)))
        local avg_min=$((avg_interval / 60))
        local avg_sec=$((avg_interval % 60))
        local min_min=$((min_interval / 60))
        local min_sec=$((min_interval % 60))
        local max_min=$((max_interval / 60))
        local max_sec=$((max_interval % 60))

        echo "" >> "$RESULT_FILE"
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤:" >> "$RESULT_FILE"
        echo "  –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –º–µ–∂–¥—É —Å–º–µ–Ω–∞–º–∏: ${avg_min}–º ${avg_sec}—Å" >> "$RESULT_FILE"
        echo "  –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: ${min_min}–º ${min_sec}—Å" >> "$RESULT_FILE"
        echo "  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: ${max_min}–º ${max_sec}—Å" >> "$RESULT_FILE"
    fi

    echo "" >> "$RESULT_FILE"
    echo "üîÑ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —Å–º–µ–Ω IP:" >> "$RESULT_FILE"

    if [ $CHANGES_COUNT -gt 0 ]; then
        for ((i=0; i<$CHANGES_COUNT; i++)); do
            local change_time=$(date -d "@${CHANGE_TIMES[i]}" "+%Y-%m-%d %H:%M:%S")
            echo "  $((i+1)). $change_time - ${IP_CHANGES[i]}" >> "$RESULT_FILE"
        done
    else
        echo "  –°–º–µ–Ω IP –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ" >> "$RESULT_FILE"
    fi

    echo "" >> "$RESULT_FILE"
    echo "‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:" >> "$RESULT_FILE"
    echo "  –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $INTERFACE" >> "$RESULT_FILE"
    echo "  –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–æ–∫: ${CHECK_INTERVAL}—Å" >> "$RESULT_FILE"
    echo "  –°–µ—Ä–≤–∏—Å –ø—Ä–æ–≤–µ—Ä–∫–∏: 2ip.ru" >> "$RESULT_FILE"

    if [ "$STOPPED_BY_USER" = true ]; then
        echo "  –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º" >> "$RESULT_FILE"
    else
        echo "  –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: –ø–æ —Ç–∞–π–º–∞—É—Ç—É" >> "$RESULT_FILE"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
main_monitoring_loop() {
    while true; do
        local current_time=$(date +%s)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
        if [ $((current_time - START_TIME)) -ge $DURATION ]; then
            echo ""
            echo "‚è∞ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (3 —á–∞—Å–∞)"
            break
        fi

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π IP
        CURRENT_IP=$(get_external_ip)
        CHECKS_COUNT=$((CHECKS_COUNT + 1))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ IP
        if [ -n "$CURRENT_IP" ] && [ "$CURRENT_IP" != "$PREVIOUS_IP" ] && [ -n "$PREVIOUS_IP" ]; then
            CHANGES_COUNT=$((CHANGES_COUNT + 1))
            IP_CHANGES+=("$PREVIOUS_IP ‚Üí $CURRENT_IP")
            CHANGE_TIMES+=($current_time)

            echo "üîÑ –°–º–µ–Ω–∞ IP: $PREVIOUS_IP ‚Üí $CURRENT_IP ($(date "+%H:%M:%S"))"
        fi

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π IP
        if [ -n "$CURRENT_IP" ]; then
            PREVIOUS_IP="$CURRENT_IP"
        fi

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Å–∏–≥–Ω–∞–ª–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        trap 'handle_interrupt || break' INT

        # –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        sleep $CHECK_INTERVAL
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤–Ω–µ—à–Ω–µ–≥–æ IP"
    echo "================================="
    echo "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $INTERFACE"
    echo "–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–æ–∫: $CHECK_INTERVAL —Å–µ–∫—É–Ω–¥"
    echo "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: 3 —á–∞—Å–∞"
    echo "–§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $RESULT_FILE"
    echo ""
    echo "üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
    echo ""

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π IP
    echo "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ IP..."
    CURRENT_IP=$(get_external_ip)

    if [ -z "$CURRENT_IP" ]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π IP. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ."
        exit 1
    fi

    echo "üìã –ù–∞—á–∞–ª—å–Ω—ã–π IP: $CURRENT_IP"
    PREVIOUS_IP="$CURRENT_IP"

    echo ""
    echo "üîÑ –ù–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥..."
    echo "========================"

    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
    main_monitoring_loop

    echo ""
    echo "üìä –§–æ—Ä–º–∏—Ä—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É..."

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ñ–∞–π–ª
    write_statistics

    echo ""
    echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!"
    echo "üìÑ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: $RESULT_FILE"
    echo ""

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É
    echo "üìà –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞:"
    echo "  –ü—Ä–æ–≤–µ—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: $CHECKS_COUNT"
    echo "  –°–º–µ–Ω IP –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ: $CHANGES_COUNT"

    if [ $CHANGES_COUNT -gt 0 ]; then
        local total_duration=$(($(date +%s) - START_TIME))
        local frequency=$(echo "scale=2; $CHANGES_COUNT * 3600 / $total_duration" | bc -l)
        echo "  –ß–∞—Å—Ç–æ—Ç–∞ —Å–º–µ–Ω: $frequency —Å–º–µ–Ω/—á–∞—Å"

        if [ $CHANGES_COUNT -gt 1 ]; then
            local total_interval=0
            for ((i=1; i<$CHANGES_COUNT; i++)); do
                total_interval=$((total_interval + CHANGE_TIMES[i] - CHANGE_TIMES[i-1]))
            done
            local avg_interval=$((total_interval / (CHANGES_COUNT - 1)))
            local avg_min=$((avg_interval / 60))
            local avg_sec=$((avg_interval % 60))
            echo "  –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –º–µ–∂–¥—É —Å–º–µ–Ω–∞–º–∏: ${avg_min}–º ${avg_sec}—Å"
        fi
    else
        echo "  –°–º–µ–Ω—ã IP –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if ! command -v curl >/dev/null 2>&1; then
    echo "‚ùå curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install curl"
    exit 1
fi

if ! command -v bc >/dev/null 2>&1; then
    echo "‚ùå bc –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install bc"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
