#!/bin/bash
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö USB –º–æ–¥–µ–º–æ–≤
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç –≤—Å–µ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –º–æ–¥–µ–º—ã –∏ –∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

echo "üîß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö USB –º–æ–¥–µ–º–æ–≤"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Huawei API
get_session_token() {
    local ip=$1
    curl -s --connect-timeout 2 "http://$ip/api/webserver/SesTokInfo" 2>/dev/null | grep -o '<SesInfo>[^<]*</SesInfo>' | sed 's/<[^>]*>//g'
}

api_request() {
    local ip=$1
    local endpoint=$2
    curl -s --connect-timeout 3 "http://$ip$endpoint" 2>/dev/null
}

parse_xml() {
    local xml=$1
    local tag=$2
    echo "$xml" | grep -o "<$tag>[^<]*</$tag>" | sed 's/<[^>]*>//g'
}

send_api_command() {
    local ip=$1
    local endpoint=$2
    local data=$3
    local token=$(get_session_token "$ip")

    if [ -n "$token" ]; then
        curl -s -X POST \
            -H "Content-Type: application/x-www-form-urlencoded; charset=UTF-8" \
            -H "__RequestVerificationToken: $token" \
            -d "$data" \
            "http://$ip$endpoint" 2>/dev/null
    fi
}

# –ü–æ–∏—Å–∫ –≤—Å–µ—Ö USB —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
echo "1. –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö USB —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤..."

USB_INTERFACES=()
for interface in $(ip link show | grep -E "enx|usb" | cut -d: -f2 | tr -d ' '); do
    if ip addr show "$interface" | grep -q "inet "; then
        USB_INTERFACES+=("$interface")
        ip_addr=$(ip addr show "$interface" | grep "inet " | awk '{print $2}' | head -1)
        state=$(ip link show "$interface" | grep -o "state [A-Z]*" | cut -d' ' -f2)
        echo "‚úÖ –ù–∞–π–¥–µ–Ω: $interface ($ip_addr, —Å–æ—Å—Ç–æ—è–Ω–∏–µ: $state)"
    fi
done

if [ ${#USB_INTERFACES[@]} -eq 0 ]; then
    echo "‚ùå –ê–∫—Ç–∏–≤–Ω—ã–µ USB —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo ""
    echo "üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "  - USB –º–æ–¥–µ–º—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã"
    echo "  - –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    echo "  - –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –º–æ–¥–µ–º–æ–≤"
    exit 1
fi

echo ""
echo "üìä –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö USB –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤: ${#USB_INTERFACES[@]}"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ USB –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
echo ""
echo "2. –ü–æ–∏—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –º–æ–¥–µ–º–æ–≤..."

declare -A INTERFACE_WEB_MAP
declare -A WEB_INTERFACE_INFO

for interface in "${USB_INTERFACES[@]}"; do
    echo ""
    echo "üîç –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ $interface..."

    # –ü–æ–ª—É—á–∞–µ–º IP –ø–æ–¥—Å–µ—Ç–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    ip_with_mask=$(ip addr show "$interface" | grep "inet " | awk '{print $2}' | head -1)
    network_ip=$(echo "$ip_with_mask" | cut -d'/' -f1)
    network_base=$(echo "$network_ip" | cut -d'.' -f1-3)

    echo "  üìç IP –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: $network_ip"
    echo "  üîç –ü–æ–∏—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –ø–æ–¥—Å–µ—Ç–∏ $network_base.x..."

    # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö IP –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ —ç—Ç–æ–π –ø–æ–¥—Å–µ—Ç–∏
    possible_web_ips=(
        "${network_base}.1"
        "${network_base}.254"
        "${network_base}.100"
        "${network_base}.200"
    )

    web_found=false
    for web_ip in "${possible_web_ips[@]}"; do
        echo -n "    –ü—Ä–æ–≤–µ—Ä—è–µ–º $web_ip... "

        if ping -c 1 -W 1 "$web_ip" >/dev/null 2>&1; then
            if curl -s --connect-timeout 2 "http://$web_ip" | grep -qi "huawei\|mobile.*wifi\|lte\|4g\|modem"; then
                echo "‚úÖ –ù–∞–π–¥–µ–Ω"
                INTERFACE_WEB_MAP["$interface"]="$web_ip"
                web_found=true

                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–º–µ
                device_info=$(api_request "$web_ip" "/api/device/information")
                if [ -n "$device_info" ]; then
                    model=$(parse_xml "$device_info" "DeviceName")
                    imei=$(parse_xml "$device_info" "Imei")
                    WEB_INTERFACE_INFO["${web_ip}_model"]="${model:-"Unknown"}"
                    WEB_INTERFACE_INFO["${web_ip}_imei"]="$imei"
                    echo "      üì± –ú–æ–¥–µ–ª—å: ${model:-"Unknown"}"
                fi
                break
            else
                echo "‚ùå –ù–µ –º–æ–¥–µ–º"
            fi
        else
            echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    done

    if [ "$web_found" = false ]; then
        echo "  ‚ö†Ô∏è  –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è $interface"
        echo "  üí° –í–æ–∑–º–æ–∂–Ω–æ, –º–æ–¥–µ–º –≤ —Ä–µ–∂–∏–º–µ Stick –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π IP"
    fi
done

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –º–æ–¥–µ–º–∞
echo ""
echo "3. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–º–æ–≤..."

counter=1
for interface in "${USB_INTERFACES[@]}"; do
    echo ""
    echo "[$counter/${#USB_INTERFACES[@]}] üìã –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: $interface"
    echo "============================================="

    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
    ip_addr=$(ip addr show "$interface" | grep "inet " | awk '{print $2}' | head -1)
    gateway=$(ip route show dev "$interface" | grep default | awk '{print $3}' | head -1)

    echo "üåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "  IP: $ip_addr"
    echo "  –®–ª—é–∑: ${gateway:-"–Ω–µ –Ω–∞–π–¥–µ–Ω"}"

    # –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
    echo ""
    echo "üåç –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:"
    if timeout 10 curl -s --interface "$interface" http://httpbin.org/ip >/dev/null 2>&1; then
        external_ip=$(timeout 10 curl -s --interface "$interface" http://httpbin.org/ip 2>/dev/null | grep -o '"origin": "[^"]*"' | cut -d'"' -f4)
        echo "  ‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        echo "  üìç –í–Ω–µ—à–Ω–∏–π IP: ${external_ip:-"–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω"}"

        # –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ (–ø—Ä–æ—Å—Ç–æ–π)
        echo -n "  ‚ö° –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏... "
        start_time=$(date +%s%N)
        curl -s --interface "$interface" --max-time 5 http://httpbin.org/bytes/1048576 >/dev/null 2>&1
        end_time=$(date +%s%N)
        duration=$(( (end_time - start_time) / 1000000 ))

        if [ $duration -gt 0 ] && [ $duration -lt 10000 ]; then
            speed=$(( 8 * 1048576 / duration ))  # –±–∏—Ç/–º—Å = –ú–±–∏—Ç/—Å
            echo "${speed} –ú–±–∏—Ç/—Å (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ)"
        else
            echo "–Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ—Ä–∏—Ç—å"
        fi
    else
        echo "  ‚ùå –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi

    # –¢–µ—Å—Ç –ø–∏–Ω–≥–∞
    echo ""
    echo "üì° –¢–µ—Å—Ç –∑–∞–¥–µ—Ä–∂–∫–∏:"
    ping_result=$(ping -I "$interface" -c 3 8.8.8.8 2>/dev/null | grep "time=" | tail -1)
    if [ -n "$ping_result" ]; then
        ping_time=$(echo "$ping_result" | grep -o "time=[0-9.]*" | cut -d= -f2)
        avg_ping=$(ping -I "$interface" -c 3 8.8.8.8 2>/dev/null | grep "avg" | cut -d'/' -f5)
        echo "  ‚ö° –ü–∏–Ω–≥: ${ping_time}ms"
        echo "  üìä –°—Ä–µ–¥–Ω–∏–π –ø–∏–Ω–≥: ${avg_ping:-"N/A"}ms"
    else
        echo "  ‚ùå –ü–∏–Ω–≥ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç"
    fi

    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω)
    web_ip="${INTERFACE_WEB_MAP[$interface]}"
    if [ -n "$web_ip" ]; then
        echo ""
        echo "üåê –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ($web_ip):"

        model="${WEB_INTERFACE_INFO[${web_ip}_model]}"
        imei="${WEB_INTERFACE_INFO[${web_ip}_imei]}"

        echo "  üì± –ú–æ–¥–µ–ª—å: $model"
        if [ -n "$imei" ]; then
            echo "  üÜî IMEI: ${imei:0:8}****${imei:12}"
        fi

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏–≥–Ω–∞–ª–∞
        signal_info=$(api_request "$web_ip" "/api/device/signal")
        if [ -n "$signal_info" ]; then
            rssi=$(parse_xml "$signal_info" "rssi")
            rsrp=$(parse_xml "$signal_info" "rsrp")
            rsrq=$(parse_xml "$signal_info" "rsrq")
            sinr=$(parse_xml "$signal_info" "sinr")

            echo "  üì∂ –ö–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞:"
            echo "    RSSI: ${rssi:-"N/A"} dBm"
            echo "    RSRP: ${rsrp:-"N/A"} dBm"
            echo "    RSRQ: ${rsrq:-"N/A"} dB"
            echo "    SINR: ${sinr:-"N/A"} dB"

            # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–∏–≥–Ω–∞–ª–∞
            if [ -n "$rsrp" ] && [ "$rsrp" -gt -100 ]; then
                echo "    ‚úÖ –û—Ç–ª–∏—á–Ω—ã–π —Å–∏–≥–Ω–∞–ª"
            elif [ -n "$rsrp" ] && [ "$rsrp" -gt -110 ]; then
                echo "    üü° –•–æ—Ä–æ—à–∏–π —Å–∏–≥–Ω–∞–ª"
            elif [ -n "$rsrp" ]; then
                echo "    ‚ö†Ô∏è  –°–ª–∞–±—ã–π —Å–∏–≥–Ω–∞–ª"
            fi
        fi

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏
        network_info=$(api_request "$web_ip" "/api/net/current-network")
        if [ -n "$network_info" ]; then
            network_type=$(parse_xml "$network_info" "CurrentNetworkType")
            operator=$(parse_xml "$network_info" "FullName")

            echo "  üè¢ –û–ø–µ—Ä–∞—Ç–æ—Ä: ${operator:-"N/A"}"

            case "$network_type" in
                "19") echo "  üì° –¢–∏–ø —Å–µ—Ç–∏: LTE (4G)" ;;
                "9"|"10"|"11") echo "  üì° –¢–∏–ø —Å–µ—Ç–∏: 3G/HSPA+" ;;
                "3"|"1"|"2") echo "  üì° –¢–∏–ø —Å–µ—Ç–∏: 2G/EDGE" ;;
                *) echo "  üì° –¢–∏–ø —Å–µ—Ç–∏: –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω ($network_type)" ;;
            esac
        fi

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        status_info=$(api_request "$web_ip" "/api/monitoring/status")
        if [ -n "$status_info" ]; then
            connection_status=$(parse_xml "$status_info" "ConnectionStatus")
            case "$connection_status" in
                "901") echo "  üîó –°—Ç–∞—Ç—É—Å: –ü–æ–¥–∫–ª—é—á–µ–Ω–æ" ;;
                "902") echo "  üîó –°—Ç–∞—Ç—É—Å: –û—Ç–∫–ª—é—á–µ–Ω–æ" ;;
                "903") echo "  üîó –°—Ç–∞—Ç—É—Å: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ..." ;;
                "904") echo "  üîó –°—Ç–∞—Ç—É—Å: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ..." ;;
                *) echo "  üîó –°—Ç–∞—Ç—É—Å: $connection_status" ;;
            esac
        fi

        echo "  üåê –í–µ–±-–ø–∞–Ω–µ–ª—å: http://$web_ip"
    else
        echo ""
        echo "‚ö†Ô∏è  –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
    fi

    counter=$((counter + 1))
done

# –û–ø—Ü–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
echo ""
echo "4. –û–ø—Ü–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏..."

available_optimizations=0
for interface in "${USB_INTERFACES[@]}"; do
    web_ip="${INTERFACE_WEB_MAP[$interface]}"
    if [ -n "$web_ip" ]; then
        available_optimizations=$((available_optimizations + 1))
    fi
done

if [ $available_optimizations -gt 0 ]; then
    echo "üîß –î–æ—Å—Ç—É–ø–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è $available_optimizations –º–æ–¥–µ–º–∞(–æ–≤)"
    echo ""
    read -p "–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é? (y/N): " -n 1 -r
    echo ""

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ö° –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏..."

        for interface in "${USB_INTERFACES[@]}"; do
            web_ip="${INTERFACE_WEB_MAP[$interface]}"
            if [ -n "$web_ip" ]; then
                echo ""
                echo "üîß –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–º–∞ –Ω–∞ $web_ip..."

                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                signal_info=$(api_request "$web_ip" "/api/device/signal")
                rsrp=$(parse_xml "$signal_info" "rsrp")

                optimizations_applied=0

                # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 1: –§–∏–∫—Å–∞—Ü–∏—è LTE —Ä–µ–∂–∏–º–∞ (–µ—Å–ª–∏ —Å–∏–≥–Ω–∞–ª —Ö–æ—Ä–æ—à–∏–π)
                if [ -n "$rsrp" ] && [ "$rsrp" -gt -105 ]; then
                    echo "  ‚úÖ –§–∏–∫—Å–∏—Ä—É–µ–º LTE —Ä–µ–∂–∏–º..."
                    send_api_command "$web_ip" "/api/net/net-mode" \
                        '<?xml version="1.0" encoding="UTF-8"?><request><NetworkMode>03</NetworkMode><NetworkBand>3FFFFFFF</NetworkBand></request>'
                    optimizations_applied=$((optimizations_applied + 1))
                fi

                # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 2: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —á–∞—Å—Ç–æ—Ç–Ω—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤
                lte_info=$(api_request "$web_ip" "/api/net/net-mode")
                if echo "$lte_info" | grep -q "B3\|B7"; then
                    echo "  ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —á–∞—Å—Ç–æ—Ç–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã..."
                    send_api_command "$web_ip" "/api/net/net-mode" \
                        '<?xml version="1.0" encoding="UTF-8"?><request><NetworkMode>03</NetworkMode><NetworkBand>C5</NetworkBand></request>'
                    optimizations_applied=$((optimizations_applied + 1))
                fi

                if [ $optimizations_applied -gt 0 ]; then
                    echo "  üìä –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π: $optimizations_applied"
                    echo "  ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
                    sleep 5
                else
                    echo "  ‚ÑπÔ∏è  –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
                fi
            fi
        done

        echo ""
        echo "‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    fi
else
    echo "‚ö†Ô∏è  –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã)"
fi

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo ""
echo "üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "======================="
echo "üîß –í—Å–µ–≥–æ USB –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤: ${#USB_INTERFACES[@]}"
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: $available_optimizations"

working_internet=0
for interface in "${USB_INTERFACES[@]}"; do
    if timeout 5 curl -s --interface "$interface" http://httpbin.org/ip >/dev/null 2>&1; then
        working_internet=$((working_internet + 1))
    fi
done

echo "üåç –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º: $working_internet"

if [ $working_internet -eq ${#USB_INTERFACES[@]} ]; then
    echo ""
    echo "üéâ –í—Å–µ –º–æ–¥–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ç–ª–∏—á–Ω–æ!"
elif [ $working_internet -gt 0 ]; then
    echo ""
    echo "‚úÖ –ß–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
else
    echo ""
    echo "‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
fi

echo ""
echo "üöÄ –ú–æ–¥–µ–º—ã –≥–æ—Ç–æ–≤—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ Mobile Proxy Service!"
